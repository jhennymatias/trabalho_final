

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 14 01:24:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	strings
   194  065A                     __pstrings:
   195  065A                     stringtab:
   196  065A                     __stringtab:
   197                           
   198                           ;	String table - string pointers are 1 byte each
   199  065A  1BFF               	btfsc	btemp+1,7
   200  065B  2E64               	ljmp	stringcode
   201  065C  1383               	bcf	3,7
   202  065D  187F               	btfsc	btemp+1,0
   203  065E  1783               	bsf	3,7
   204  065F  0800               	movf	0,w
   205  0660  0A84               	incf	4,f
   206  0661  1903               	skipnz
   207  0662  0AFF               	incf	btemp+1,f
   208  0663  0008               	return
   209  0664                     stringcode:
   210  0664                     stringdir:
   211  0664  3006               	movlw	high stringdir
   212  0665  008A               	movwf	10
   213  0666  0804               	movf	4,w
   214  0667  0A84               	incf	4,f
   215  0668  0782               	addwf	2,f
   216  0669                     __stringbase:
   217  0669  3400               	retlw	0
   218  066A                     __end_of__stringtab:
   219  066A                     _dpowers:
   220  066A  3401               	retlw	1
   221  066B  3400               	retlw	0
   222  066C  340A               	retlw	10
   223  066D  3400               	retlw	0
   224  066E  3464               	retlw	100
   225  066F  3400               	retlw	0
   226  0670  34E8               	retlw	232
   227  0671  3403               	retlw	3
   228  0672  3410               	retlw	16
   229  0673  3427               	retlw	39
   230  0674                     __end_of_dpowers:
   231  001E                     _ADRESH	set	30
   232  001F                     _ADCON0bits	set	31
   233  0010                     _T1CONbits	set	16
   234  000B                     _INTCONbits	set	11
   235  000F                     _TMR1H	set	15
   236  000E                     _TMR1L	set	14
   237  000C                     _PIR1bits	set	12
   238  0007                     _PORTCbits	set	7
   239  0006                     _PORTBbits	set	6
   240  0060                     _TMR1IF	set	96
   241  0059                     _INTF	set	89
   242  0043                     _RD3	set	67
   243  0042                     _RD2	set	66
   244  0047                     _RD7	set	71
   245  0046                     _RD6	set	70
   246  0045                     _RD5	set	69
   247  0044                     _RD4	set	68
   248  009E                     _ADRESL	set	158
   249  009F                     _ADCON1bits	set	159
   250  008C                     _PIE1bits	set	140
   251  0081                     _OPTION_REGbits	set	129
   252  0088                     _TRISD	set	136
   253  0087                     _TRISC	set	135
   254  0086                     _TRISB	set	134
   255  0085                     _TRISA	set	133
   256  0674                     STR_3:
   257  0674  3450               	retlw	80	;'P'
   258  0675  3452               	retlw	82	;'R'
   259  0676  344F               	retlw	79	;'O'
   260  0677  344E               	retlw	78	;'N'
   261  0678  3454               	retlw	84	;'T'
   262  0679  344F               	retlw	79	;'O'
   263  067A  3420               	retlw	32	;' '
   264  067B  3450               	retlw	80	;'P'
   265  067C  342F               	retlw	47	;'/'
   266  067D  3420               	retlw	32	;' '
   267  067E  3452               	retlw	82	;'R'
   268  067F  3445               	retlw	69	;'E'
   269  0680  3454               	retlw	84	;'T'
   270  0681  3449               	retlw	73	;'I'
   271  0682  3452               	retlw	82	;'R'
   272  0683  3441               	retlw	65	;'A'
   273  0684  3452               	retlw	82	;'R'
   274  0685  3421               	retlw	33	;'!'
   275  0686  3400               	retlw	0
   276  0687                     STR_2:
   277  0687  3445               	retlw	69	;'E'
   278  0688  344D               	retlw	77	;'M'
   279  0689  3445               	retlw	69	;'E'
   280  068A  3452               	retlw	82	;'R'
   281  068B  3447               	retlw	71	;'G'
   282  068C  3445               	retlw	69	;'E'
   283  068D  344E               	retlw	78	;'N'
   284  068E  3443               	retlw	67	;'C'
   285  068F  3449               	retlw	73	;'I'
   286  0690  3441               	retlw	65	;'A'
   287  0691  3421               	retlw	33	;'!'
   288  0692  3400               	retlw	0
   289  0693                     STR_4:
   290  0693  3430               	retlw	48	;'0'
   291  0694  3430               	retlw	48	;'0'
   292  0695  343A               	retlw	58	;':'
   293  0696  3430               	retlw	48	;'0'
   294  0697  3430               	retlw	48	;'0'
   295  0698  3400               	retlw	0
   296  0699                     STR_1:
   297  0699  3425               	retlw	37	;'%'
   298  069A  3464               	retlw	100	;'d'
   299  069B  343A               	retlw	58	;':'
   300  069C  3425               	retlw	37	;'%'
   301  069D  3464               	retlw	100	;'d'
   302  069E  3400               	retlw	0
   303                           
   304                           	psect	cinit
   305  0015                     start_initialization:	
   306                           ; #config settings
   307                           
   308  0015                     __initialization:
   309                           
   310                           ; Clear objects allocated to BANK0
   311  0015  1283               	bcf	3,5	;RP0=0, select bank0
   312  0016  1303               	bcf	3,6	;RP1=0, select bank0
   313  0017  01CC               	clrf	__pbssBANK0& (0+127)
   314  0018  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   315  0019  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   316  001A  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   317  001B  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   318  001C  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   319  001D  01D2               	clrf	(__pbssBANK0+6)& (0+127)
   320  001E  01D3               	clrf	(__pbssBANK0+7)& (0+127)
   321  001F  01D4               	clrf	(__pbssBANK0+8)& (0+127)
   322  0020  01D5               	clrf	(__pbssBANK0+9)& (0+127)
   323  0021  01D6               	clrf	(__pbssBANK0+10)& (0+127)
   324  0022  01D7               	clrf	(__pbssBANK0+11)& (0+127)
   325  0023  01D8               	clrf	(__pbssBANK0+12)& (0+127)
   326  0024  01D9               	clrf	(__pbssBANK0+13)& (0+127)
   327  0025                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  0025                     __end_of__initialization:
   331  0025  0183               	clrf	3
   332  0026  120A  118A  2A50   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssBANK0
   335  004C                     __pbssBANK0:
   336  004C                     _conta:
   337  004C                     	ds	2
   338  004E                     _contador_horas:
   339  004E                     	ds	2
   340  0050                     _contador_minutos:
   341  0050                     	ds	2
   342  0052                     _celsius:
   343  0052                     	ds	2
   344  0054                     _timer:
   345  0054                     	ds	6
   346                           
   347                           	psect	cstackBANK1
   348  00A0                     __pcstackBANK1:
   349  00A0                     sprintf@ap:
   350                           
   351                           ; 1 bytes @ 0x0
   352  00A0                     	ds	1
   353  00A1                     sprintf@flag:
   354                           
   355                           ; 1 bytes @ 0x1
   356  00A1                     	ds	1
   357  00A2                     sprintf@prec:
   358                           
   359                           ; 1 bytes @ 0x2
   360  00A2                     	ds	1
   361  00A3                     sprintf@val:
   362                           
   363                           ; 2 bytes @ 0x3
   364  00A3                     	ds	2
   365  00A5                     sprintf@sp:
   366                           
   367                           ; 1 bytes @ 0x5
   368  00A5                     	ds	1
   369  00A6                     sprintf@c:
   370                           
   371                           ; 1 bytes @ 0x6
   372  00A6                     	ds	1
   373  00A7                     ??_mostra_timer:
   374                           
   375                           ; 1 bytes @ 0x7
   376  00A7                     	ds	1
   377  00A8                     ??_regula_timer:
   378                           
   379                           ; 1 bytes @ 0x8
   380  00A8                     	ds	2
   381  00AA                     ??_main:
   382                           
   383                           ; 1 bytes @ 0xA
   384  00AA                     	ds	3
   385                           
   386                           	psect	cstackCOMMON
   387  0070                     __pcstackCOMMON:
   388  0070                     ?_Lcd_Port:
   389  0070                     ?_Lcd_Cmd:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_Lcd_Clear:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_Lcd_Init:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Write_Char:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_mostra_timer:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_INTR:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_regula_timer:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_main:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?i1_Lcd_Port:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ??i1_Lcd_Port:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?i1_Lcd_Cmd:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?i1_Lcd_Clear:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?i1_Lcd_Write_Char:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?i1_mostra_timer:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?i1___lwdiv:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     i1Lcd_Port@a:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     i1___lwdiv@divisor:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442  0070                     	ds	1
   443  0071                     ??i1_Lcd_Cmd:
   444  0071                     ??i1_Lcd_Write_Char:	
   445                           ; 1 bytes @ 0x1
   446                           
   447                           
   448                           ; 1 bytes @ 0x1
   449  0071                     	ds	1
   450  0072                     i1Lcd_Write_Char@templcd:
   451  0072                     i1___lwdiv@dividend:	
   452                           ; 1 bytes @ 0x2
   453                           
   454                           
   455                           ; 2 bytes @ 0x2
   456  0072                     	ds	1
   457  0073                     i1Lcd_Cmd@a:
   458  0073                     i1Lcd_Write_Char@y:	
   459                           ; 1 bytes @ 0x3
   460                           
   461                           
   462                           ; 1 bytes @ 0x3
   463  0073                     	ds	1
   464  0074                     ??i1_Lcd_Clear:
   465  0074                     ?i1_Lcd_Set_Cursor:	
   466                           ; 1 bytes @ 0x4
   467                           
   468  0074                     ??i1___lwdiv:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     i1Lcd_Set_Cursor@b:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     i1Lcd_Write_Char@a:	
   475                           ; 1 bytes @ 0x4
   476                           
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ??i1_Lcd_Set_Cursor:
   481  0075                     ?i1_Lcd_Write_String:	
   482                           ; 1 bytes @ 0x5
   483                           
   484  0075                     i1Lcd_Write_String@a:	
   485                           ; 1 bytes @ 0x5
   486                           
   487  0075                     i1___lwdiv@quotient:	
   488                           ; 2 bytes @ 0x5
   489                           
   490                           
   491                           ; 2 bytes @ 0x5
   492  0075                     	ds	2
   493  0077                     ??i1_Lcd_Write_String:
   494  0077                     i1Lcd_Set_Cursor@a:	
   495                           ; 1 bytes @ 0x7
   496                           
   497  0077                     i1___lwdiv@counter:	
   498                           ; 1 bytes @ 0x7
   499                           
   500                           
   501                           ; 1 bytes @ 0x7
   502  0077                     	ds	1
   503  0078                     ?i1___lwmod:
   504  0078                     i1Lcd_Set_Cursor@z:	
   505                           ; 2 bytes @ 0x8
   506                           
   507  0078                     i1___lwmod@divisor:	
   508                           ; 1 bytes @ 0x8
   509                           
   510                           
   511                           ; 2 bytes @ 0x8
   512  0078                     	ds	1
   513  0079                     i1Lcd_Set_Cursor@y:
   514                           
   515                           ; 1 bytes @ 0x9
   516  0079                     	ds	1
   517  007A                     i1Lcd_Set_Cursor@templcd:
   518  007A                     i1Lcd_Write_String@i:	
   519                           ; 1 bytes @ 0xA
   520                           
   521  007A                     i1___lwmod@dividend:	
   522                           ; 2 bytes @ 0xA
   523                           
   524                           
   525                           ; 2 bytes @ 0xA
   526  007A                     	ds	2
   527  007C                     ??i1___lwmod:
   528                           
   529                           ; 1 bytes @ 0xC
   530  007C                     	ds	1
   531  007D                     i1___lwmod@counter:
   532                           
   533                           ; 1 bytes @ 0xD
   534  007D                     	ds	1
   535                           
   536                           	psect	cstackBANK0
   537  0020                     __pcstackBANK0:
   538  0020                     ?i1_sprintf:
   539  0020                     i1sprintf@f:	
   540                           ; 2 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544  0020                     	ds	5
   545  0025                     ??i1_sprintf:
   546                           
   547                           ; 1 bytes @ 0x5
   548  0025                     	ds	3
   549  0028                     i1sprintf@ap:
   550                           
   551                           ; 1 bytes @ 0x8
   552  0028                     	ds	1
   553  0029                     i1sprintf@flag:
   554                           
   555                           ; 1 bytes @ 0x9
   556  0029                     	ds	1
   557  002A                     i1sprintf@prec:
   558                           
   559                           ; 1 bytes @ 0xA
   560  002A                     	ds	1
   561  002B                     i1sprintf@val:
   562                           
   563                           ; 2 bytes @ 0xB
   564  002B                     	ds	2
   565  002D                     i1sprintf@sp:
   566                           
   567                           ; 1 bytes @ 0xD
   568  002D                     	ds	1
   569  002E                     i1sprintf@c:
   570                           
   571                           ; 1 bytes @ 0xE
   572  002E                     	ds	1
   573  002F                     ??i1_mostra_timer:
   574                           
   575                           ; 1 bytes @ 0xF
   576  002F                     	ds	1
   577  0030                     ??_INTR:
   578                           
   579                           ; 1 bytes @ 0x10
   580  0030                     	ds	6
   581  0036                     ??_Lcd_Port:
   582  0036                     ?___lwdiv:	
   583                           ; 1 bytes @ 0x16
   584                           
   585  0036                     Lcd_Port@a:	
   586                           ; 2 bytes @ 0x16
   587                           
   588  0036                     ___lwdiv@divisor:	
   589                           ; 1 bytes @ 0x16
   590                           
   591                           
   592                           ; 2 bytes @ 0x16
   593  0036                     	ds	1
   594  0037                     ??_Lcd_Cmd:
   595  0037                     ??_Lcd_Write_Char:	
   596                           ; 1 bytes @ 0x17
   597                           
   598                           
   599                           ; 1 bytes @ 0x17
   600  0037                     	ds	1
   601  0038                     Lcd_Write_Char@templcd:
   602  0038                     ___lwdiv@dividend:	
   603                           ; 1 bytes @ 0x18
   604                           
   605                           
   606                           ; 2 bytes @ 0x18
   607  0038                     	ds	1
   608  0039                     Lcd_Cmd@a:
   609  0039                     Lcd_Write_Char@y:	
   610                           ; 1 bytes @ 0x19
   611                           
   612                           
   613                           ; 1 bytes @ 0x19
   614  0039                     	ds	1
   615  003A                     ??_Lcd_Clear:
   616  003A                     ?_Lcd_Set_Cursor:	
   617                           ; 1 bytes @ 0x1A
   618                           
   619  003A                     ??_Lcd_Init:	
   620                           ; 1 bytes @ 0x1A
   621                           
   622  003A                     ??___lwdiv:	
   623                           ; 1 bytes @ 0x1A
   624                           
   625  003A                     Lcd_Set_Cursor@b:	
   626                           ; 1 bytes @ 0x1A
   627                           
   628  003A                     Lcd_Write_Char@a:	
   629                           ; 1 bytes @ 0x1A
   630                           
   631                           
   632                           ; 1 bytes @ 0x1A
   633  003A                     	ds	1
   634  003B                     ??_Lcd_Set_Cursor:
   635  003B                     ?_Lcd_Write_String:	
   636                           ; 1 bytes @ 0x1B
   637                           
   638  003B                     ___lwdiv@counter:	
   639                           ; 1 bytes @ 0x1B
   640                           
   641  003B                     Lcd_Write_String@a:	
   642                           ; 1 bytes @ 0x1B
   643                           
   644                           
   645                           ; 2 bytes @ 0x1B
   646  003B                     	ds	1
   647  003C                     ___lwdiv@quotient:
   648                           
   649                           ; 2 bytes @ 0x1C
   650  003C                     	ds	1
   651  003D                     ??_Lcd_Write_String:
   652  003D                     Lcd_Set_Cursor@a:	
   653                           ; 1 bytes @ 0x1D
   654                           
   655                           
   656                           ; 1 bytes @ 0x1D
   657  003D                     	ds	1
   658  003E                     ?___lwmod:
   659  003E                     Lcd_Set_Cursor@z:	
   660                           ; 2 bytes @ 0x1E
   661                           
   662  003E                     ___lwmod@divisor:	
   663                           ; 1 bytes @ 0x1E
   664                           
   665                           
   666                           ; 2 bytes @ 0x1E
   667  003E                     	ds	1
   668  003F                     Lcd_Set_Cursor@y:
   669                           
   670                           ; 1 bytes @ 0x1F
   671  003F                     	ds	1
   672  0040                     Lcd_Set_Cursor@templcd:
   673  0040                     Lcd_Write_String@i:	
   674                           ; 1 bytes @ 0x20
   675                           
   676  0040                     ___lwmod@dividend:	
   677                           ; 2 bytes @ 0x20
   678                           
   679                           
   680                           ; 2 bytes @ 0x20
   681  0040                     	ds	2
   682  0042                     ??___lwmod:
   683                           
   684                           ; 1 bytes @ 0x22
   685  0042                     	ds	1
   686  0043                     ___lwmod@counter:
   687                           
   688                           ; 1 bytes @ 0x23
   689  0043                     	ds	1
   690  0044                     ?_sprintf:
   691  0044                     sprintf@f:	
   692                           ; 2 bytes @ 0x24
   693                           
   694                           
   695                           ; 1 bytes @ 0x24
   696  0044                     	ds	5
   697  0049                     ??_sprintf:
   698                           
   699                           ; 1 bytes @ 0x29
   700  0049                     	ds	3
   701                           
   702                           	psect	maintext
   703  0250                     __pmaintext:	
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 136 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : B00/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          0       0       3       0       0
   726 ;;      Totals:         0       0       3       0       0
   727 ;;Total ram usage:        3 bytes
   728 ;; Hardware stack levels required when called: 10
   729 ;; This function calls:
   730 ;;		_Lcd_Clear
   731 ;;		_Lcd_Init
   732 ;;		_Lcd_Set_Cursor
   733 ;;		_Lcd_Write_String
   734 ;;		_regula_timer
   735 ;; This function is called by:
   736 ;;		Startup code after reset
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _main
   742  0250                     _main:
   743  0250                     l2113:	
   744                           ;incstack = 0
   745 ;; hardware stack exceeded
   746                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   747                           
   748                           
   749                           ;main.c: 139:    TRISA = 0b11111111;
   750  0250  30FF               	movlw	255
   751  0251  1683               	bsf	3,5	;RP0=1, select bank1
   752  0252  1303               	bcf	3,6	;RP1=0, select bank1
   753  0253  0085               	movwf	5	;volatile
   754                           
   755                           ;main.c: 140:    TRISB = 0b00111111;
   756  0254  303F               	movlw	63
   757  0255  0086               	movwf	6	;volatile
   758  0256                     l2115:
   759                           
   760                           ;main.c: 141:    TRISC = 0b00000000;
   761  0256  0187               	clrf	7	;volatile
   762  0257                     l2117:
   763                           
   764                           ;main.c: 142:    TRISD = 0b00000000;
   765  0257  0188               	clrf	8	;volatile
   766  0258                     l2119:
   767                           
   768                           ;main.c: 145:    PORTBbits.RB6 = 0;
   769  0258  1283               	bcf	3,5	;RP0=0, select bank0
   770  0259  1303               	bcf	3,6	;RP1=0, select bank0
   771  025A  1306               	bcf	6,6	;volatile
   772  025B                     l2121:
   773                           
   774                           ;main.c: 146:    PORTBbits.RB7 = 0;
   775  025B  1386               	bcf	6,7	;volatile
   776  025C                     l2123:
   777                           
   778                           ;main.c: 147:    PORTCbits.RC5 = 0;
   779  025C  1287               	bcf	7,5	;volatile
   780  025D                     l2125:
   781                           
   782                           ;main.c: 149:    OPTION_REGbits.nRBPU = 0;
   783  025D  1683               	bsf	3,5	;RP0=1, select bank1
   784  025E  1303               	bcf	3,6	;RP1=0, select bank1
   785  025F  1381               	bcf	1,7	;volatile
   786  0260                     l2127:
   787                           
   788                           ;main.c: 152:    OPTION_REGbits.INTEDG = 1;
   789  0260  1701               	bsf	1,6	;volatile
   790  0261                     l2129:
   791                           
   792                           ;main.c: 153:    INTCONbits.INTE = 1;
   793  0261  160B               	bsf	11,4	;volatile
   794  0262                     l2131:
   795                           
   796                           ;main.c: 156:    INTCONbits.GIE=1;
   797  0262  178B               	bsf	11,7	;volatile
   798  0263                     l2133:
   799                           
   800                           ;main.c: 157:    INTCONbits.PEIE = 1;
   801  0263  170B               	bsf	11,6	;volatile
   802  0264                     l2135:
   803                           
   804                           ;main.c: 158:    PIE1bits.TMR1IE = 1;
   805  0264  140C               	bsf	12,0	;volatile
   806  0265                     l2137:
   807                           
   808                           ;main.c: 161:    T1CONbits.TMR1CS = 0;
   809  0265  1283               	bcf	3,5	;RP0=0, select bank0
   810  0266  1303               	bcf	3,6	;RP1=0, select bank0
   811  0267  1090               	bcf	16,1	;volatile
   812  0268                     l2139:
   813                           
   814                           ;main.c: 162:    T1CONbits.T1CKPS0 = 1;
   815  0268  1610               	bsf	16,4	;volatile
   816  0269                     l2141:
   817                           
   818                           ;main.c: 163:    T1CONbits.T1CKPS1 = 1;
   819  0269  1690               	bsf	16,5	;volatile
   820                           
   821                           ;main.c: 165:    TMR1L = 0xDC;
   822  026A  30DC               	movlw	220
   823  026B  008E               	movwf	14	;volatile
   824                           
   825                           ;main.c: 166:    TMR1H = 0x0B;
   826  026C  300B               	movlw	11
   827  026D  008F               	movwf	15	;volatile
   828  026E                     l2143:
   829                           
   830                           ;main.c: 169:    ADCON1bits.PCFG0 = 0;
   831  026E  1683               	bsf	3,5	;RP0=1, select bank1
   832  026F  1303               	bcf	3,6	;RP1=0, select bank1
   833  0270  101F               	bcf	31,0	;volatile
   834  0271                     l2145:
   835                           
   836                           ;main.c: 170:    ADCON1bits.PCFG1 = 1;
   837  0271  149F               	bsf	31,1	;volatile
   838  0272                     l2147:
   839                           
   840                           ;main.c: 171:    ADCON1bits.PCFG2 = 1;
   841  0272  151F               	bsf	31,2	;volatile
   842  0273                     l2149:
   843                           
   844                           ;main.c: 172:    ADCON1bits.PCFG3 = 1;
   845  0273  159F               	bsf	31,3	;volatile
   846  0274                     l2151:
   847                           
   848                           ;main.c: 174:    ADCON0bits.ADCS0 = 0 ;
   849  0274  1283               	bcf	3,5	;RP0=0, select bank0
   850  0275  1303               	bcf	3,6	;RP1=0, select bank0
   851  0276  131F               	bcf	31,6	;volatile
   852  0277                     l2153:
   853                           
   854                           ;main.c: 175:    ADCON0bits.ADCS1 = 0 ;
   855  0277  139F               	bcf	31,7	;volatile
   856  0278                     l2155:
   857                           
   858                           ;main.c: 176:    ADCON1bits.ADFM = 0 ;
   859  0278  1683               	bsf	3,5	;RP0=1, select bank1
   860  0279  1303               	bcf	3,6	;RP1=0, select bank1
   861  027A  139F               	bcf	31,7	;volatile
   862  027B                     l2157:
   863                           
   864                           ;main.c: 182:    ADRESL = 0x00;
   865  027B  019E               	clrf	30	;volatile
   866  027C                     l2159:
   867                           
   868                           ;main.c: 183:    ADRESH = 0x00;
   869  027C  1283               	bcf	3,5	;RP0=0, select bank0
   870  027D  1303               	bcf	3,6	;RP1=0, select bank0
   871  027E  019E               	clrf	30	;volatile
   872  027F                     l2161:
   873                           
   874                           ;main.c: 184:    ADCON0bits.ADON = 1;
   875  027F  141F               	bsf	31,0	;volatile
   876                           
   877                           ;main.c: 186:    _delay((unsigned long)((20)*(4000000/4000.0)));
   878  0280  301A               	movlw	26
   879  0281  1683               	bsf	3,5	;RP0=1, select bank1
   880  0282  1303               	bcf	3,6	;RP1=0, select bank1
   881  0283  00AB               	movwf	(??_main^(0+128)+1)
   882  0284  30F7               	movlw	247
   883  0285  00AA               	movwf	??_main^(0+128)
   884  0286                     u1957:
   885  0286  0BAA               	decfsz	??_main^(0+128),f
   886  0287  2A86               	goto	u1957
   887  0288  0BAB               	decfsz	(??_main^(0+128)+1),f
   888  0289  2A86               	goto	u1957
   889  028A  2A8B               	nop2
   890  028B                     l2163:
   891                           
   892                           ;main.c: 187:    Lcd_Init();
   893  028B  120A  118A  2476  120A  118A  	fcall	_Lcd_Init
   894  0290                     l2165:
   895                           
   896                           ;main.c: 188:    Lcd_Clear();
   897  0290  120A  158A  2766  120A  118A  	fcall	_Lcd_Clear
   898  0295                     l2167:
   899                           
   900                           ;main.c: 192:    Lcd_Set_Cursor(1, 1);
   901  0295  1283               	bcf	3,5	;RP0=0, select bank0
   902  0296  1303               	bcf	3,6	;RP1=0, select bank0
   903  0297  01BA               	clrf	Lcd_Set_Cursor@b
   904  0298  0ABA               	incf	Lcd_Set_Cursor@b,f
   905  0299  3001               	movlw	1
   906  029A  120A  118A  24D9  120A  118A  	fcall	_Lcd_Set_Cursor
   907  029F                     l2169:
   908                           
   909                           ;main.c: 193:    Lcd_Write_String("00:00");
   910  029F  302A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   911  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   912  02A1  1303               	bcf	3,6	;RP1=0, select bank0
   913  02A2  00BB               	movwf	Lcd_Write_String@a
   914  02A3  3080               	movlw	128
   915  02A4  00BC               	movwf	Lcd_Write_String@a+1
   916  02A5  120A  118A  2614  120A  118A  	fcall	_Lcd_Write_String
   917  02AA                     l2171:
   918                           
   919                           ;main.c: 194:    regula_timer();
   920  02AA  120A  118A  2583  120A  118A  	fcall	_regula_timer
   921  02AF                     l2173:
   922                           
   923                           ;main.c: 196:         ADCON0bits.CHS0 = 0;
   924  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   925  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   926  02B1  119F               	bcf	31,3	;volatile
   927  02B2                     l2175:
   928                           
   929                           ;main.c: 197:      ADCON0bits.CHS1 = 0;
   930  02B2  121F               	bcf	31,4	;volatile
   931  02B3                     l2177:
   932                           
   933                           ;main.c: 198:      ADCON0bits.CHS2 = 0;
   934  02B3  129F               	bcf	31,5	;volatile
   935  02B4                     l2179:
   936                           
   937                           ;main.c: 199:      ADCON0bits.GO = 1;
   938  02B4  151F               	bsf	31,2	;volatile
   939  02B5                     l2181:
   940                           
   941                           ;main.c: 200:      _delay((unsigned long)((10)*(4000000/4000000.0)));
   942  02B5  3002               	movlw	2
   943  02B6  1683               	bsf	3,5	;RP0=1, select bank1
   944  02B7  1303               	bcf	3,6	;RP1=0, select bank1
   945  02B8  00AA               	movwf	??_main^(0+128)
   946  02B9                     u1967:
   947  02B9  0BAA               	decfsz	??_main^(0+128),f
   948  02BA  2AB9               	goto	u1967
   949  02BB  0000               	nop
   950  02BC                     l2183:
   951                           
   952                           ;main.c: 201:      celsius = ADRESH*0x02;
   953  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   954  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   955  02BE  081E               	movf	30,w	;volatile
   956  02BF  1683               	bsf	3,5	;RP0=1, select bank1
   957  02C0  1303               	bcf	3,6	;RP1=0, select bank1
   958  02C1  00AA               	movwf	??_main^(0+128)
   959  02C2  01AB               	clrf	(??_main^(0+128)+1)
   960  02C3  1003               	clrc
   961  02C4  0DAA               	rlf	??_main^(0+128),f
   962  02C5  0DAB               	rlf	(??_main^(0+128)+1),f
   963  02C6  082A               	movf	??_main^(0+128),w
   964  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   965  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   966  02C9  00D2               	movwf	_celsius
   967  02CA  1683               	bsf	3,5	;RP0=1, select bank1
   968  02CB  1303               	bcf	3,6	;RP1=0, select bank1
   969  02CC  082B               	movf	(??_main+1)^(0+128),w
   970  02CD  1283               	bcf	3,5	;RP0=0, select bank0
   971  02CE  1303               	bcf	3,6	;RP1=0, select bank0
   972  02CF  00D3               	movwf	_celsius+1
   973  02D0                     l2185:
   974                           
   975                           ;main.c: 204:         if(PORTBbits.RB1 == 0){
   976  02D0  1886               	btfsc	6,1	;volatile
   977  02D1  2AD3               	goto	u1931
   978  02D2  2AD4               	goto	u1930
   979  02D3                     u1931:
   980  02D3  2AAF               	goto	l2173
   981  02D4                     u1930:
   982  02D4                     l2187:
   983                           
   984                           ;main.c: 205:                 PORTBbits.RB6 = 1;
   985  02D4  1706               	bsf	6,6	;volatile
   986                           
   987                           ;main.c: 206:                 T1CONbits.TMR1ON = 1;
   988  02D5  1410               	bsf	16,0	;volatile
   989                           
   990                           ;main.c: 207:                 PORTCbits.RC1 = 1;
   991  02D6  1487               	bsf	7,1	;volatile
   992                           
   993                           ;main.c: 208:                 PORTCbits.RC2 = 1;
   994  02D7  1507               	bsf	7,2	;volatile
   995                           
   996                           ;main.c: 209:                 PORTCbits.RC3 = 0;
   997  02D8  1187               	bcf	7,3	;volatile
   998  02D9                     l2189:
   999                           
  1000                           ;main.c: 213:             if(celsius >= 98){
  1001  02D9  0853               	movf	_celsius+1,w
  1002  02DA  3A80               	xorlw	128
  1003  02DB  00FF               	movwf	btemp+1
  1004  02DC  3080               	movlw	128
  1005  02DD  027F               	subwf	btemp+1,w
  1006  02DE  1D03               	skipz
  1007  02DF  2AE2               	goto	u1945
  1008  02E0  3062               	movlw	98
  1009  02E1  0252               	subwf	_celsius,w
  1010  02E2                     u1945:
  1011  02E2  1C03               	skipc
  1012  02E3  2AE5               	goto	u1941
  1013  02E4  2AE6               	goto	u1940
  1014  02E5                     u1941:
  1015  02E5  2AF9               	goto	l141
  1016  02E6                     u1940:
  1017  02E6                     l2191:
  1018                           
  1019                           ;main.c: 214:                 PORTCbits.RC5 = 1;
  1020  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02E8  1687               	bsf	7,5	;volatile
  1023  02E9                     l2193:
  1024                           
  1025                           ;main.c: 215:                 _delay((unsigned long)((300)*(4000000/4000.0)));
  1026  02E9  3002               	movlw	2
  1027  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1028  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1029  02EC  00AC               	movwf	(??_main^(0+128)+2)
  1030  02ED  3086               	movlw	134
  1031  02EE  00AB               	movwf	(??_main^(0+128)+1)
  1032  02EF  3098               	movlw	152
  1033  02F0  00AA               	movwf	??_main^(0+128)
  1034  02F1                     u1977:
  1035  02F1  0BAA               	decfsz	??_main^(0+128),f
  1036  02F2  2AF1               	goto	u1977
  1037  02F3  0BAB               	decfsz	(??_main^(0+128)+1),f
  1038  02F4  2AF1               	goto	u1977
  1039  02F5  0BAC               	decfsz	(??_main^(0+128)+2),f
  1040  02F6  2AF1               	goto	u1977
  1041  02F7  0000               	nop
  1042                           
  1043                           ;main.c: 216:             }else{
  1044  02F8  2AAF               	goto	l2173
  1045  02F9                     l141:
  1046                           
  1047                           ;main.c: 217:                 PORTCbits.RC5 = 0;
  1048  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1049  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1050  02FB  1287               	bcf	7,5	;volatile
  1051  02FC  2AAF               	goto	l2173
  1052  02FD  120A  118A  2812   	ljmp	start
  1053  0300                     __end_of_main:
  1054                           
  1055                           	psect	text1
  1056  0583                     __ptext1:	
  1057 ;; *************** function _regula_timer *****************
  1058 ;; Defined at:
  1059 ;;		line 114 in file "main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0
  1075 ;;      Temps:          0       0       2       0       0
  1076 ;;      Totals:         0       0       2       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 9
  1080 ;; This function calls:
  1081 ;;		_mostra_timer
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _regula_timer
  1089  0583                     _regula_timer:
  1090  0583                     l125:	
  1091                           ;incstack = 0
  1092 ;; hardware stack exceeded
  1093                           ; Regs used in _regula_timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1094                           ;main.c: 115:     while(1){
  1095                           
  1096                           
  1097                           ;main.c: 116:         if(PORTBbits.RB5 == 0 && (contador_minutos != 0 || contador_horas 
      +                          !=0)){
  1098  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0585  1A86               	btfsc	6,5	;volatile
  1101  0586  2D88               	goto	u1881
  1102  0587  2D89               	goto	u1880
  1103  0588                     u1881:
  1104  0588  2D96               	goto	l126
  1105  0589                     u1880:
  1106  0589                     l2093:
  1107  0589  0850               	movf	_contador_minutos,w
  1108  058A  0451               	iorwf	_contador_minutos+1,w
  1109  058B  1D03               	btfss	3,2
  1110  058C  2D8E               	goto	u1891
  1111  058D  2D8F               	goto	u1890
  1112  058E                     u1891:
  1113  058E  2DCD               	goto	l129
  1114  058F                     u1890:
  1115  058F                     l2095:
  1116  058F  084E               	movf	_contador_horas,w
  1117  0590  044F               	iorwf	_contador_horas+1,w
  1118  0591  1903               	btfsc	3,2
  1119  0592  2D94               	goto	u1901
  1120  0593  2D95               	goto	u1900
  1121  0594                     u1901:
  1122  0594  2D96               	goto	l126
  1123  0595                     u1900:
  1124  0595  2DCD               	goto	l129
  1125  0596                     l126:
  1126                           
  1127                           ;main.c: 119:             if(PORTBbits.RB3 == 0){
  1128  0596  1986               	btfsc	6,3	;volatile
  1129  0597  2D99               	goto	u1911
  1130  0598  2D9A               	goto	u1910
  1131  0599                     u1911:
  1132  0599  2DB0               	goto	l2105
  1133  059A                     u1910:
  1134  059A                     l2099:
  1135                           
  1136                           ;main.c: 120:                 contador_minutos++;
  1137  059A  3001               	movlw	1
  1138  059B  07D0               	addwf	_contador_minutos,f
  1139  059C  1803               	skipnc
  1140  059D  0AD1               	incf	_contador_minutos+1,f
  1141  059E  3000               	movlw	0
  1142  059F  07D1               	addwf	_contador_minutos+1,f
  1143  05A0                     l2101:
  1144                           
  1145                           ;main.c: 121:                 mostra_timer();
  1146  05A0  120A  118A  2300  120A  118A  	fcall	_mostra_timer
  1147  05A5                     l2103:
  1148                           
  1149                           ;main.c: 122:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  1150  05A5  3041               	movlw	65
  1151  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1152  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1153  05A8  00A9               	movwf	(??_regula_timer^(0+128)+1)
  1154  05A9  30ED               	movlw	237
  1155  05AA  00A8               	movwf	??_regula_timer^(0+128)
  1156  05AB                     u1987:
  1157  05AB  0BA8               	decfsz	??_regula_timer^(0+128),f
  1158  05AC  2DAB               	goto	u1987
  1159  05AD  0BA9               	decfsz	(??_regula_timer^(0+128)+1),f
  1160  05AE  2DAB               	goto	u1987
  1161  05AF  2DB0               	nop2
  1162  05B0                     l2105:
  1163                           
  1164                           ;main.c: 126:             if(PORTBbits.RB4 == 0){
  1165  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1166  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1167  05B2  1A06               	btfsc	6,4	;volatile
  1168  05B3  2DB5               	goto	u1921
  1169  05B4  2DB6               	goto	u1920
  1170  05B5                     u1921:
  1171  05B5  2D83               	goto	l125
  1172  05B6                     u1920:
  1173  05B6                     l2107:
  1174                           
  1175                           ;main.c: 127:                 contador_minutos--;
  1176  05B6  30FF               	movlw	255
  1177  05B7  07D0               	addwf	_contador_minutos,f
  1178  05B8  1803               	skipnc
  1179  05B9  0AD1               	incf	_contador_minutos+1,f
  1180  05BA  30FF               	movlw	255
  1181  05BB  07D1               	addwf	_contador_minutos+1,f
  1182  05BC                     l2109:
  1183                           
  1184                           ;main.c: 128:                 mostra_timer();
  1185  05BC  120A  118A  2300  120A  118A  	fcall	_mostra_timer
  1186  05C1                     l2111:
  1187                           
  1188                           ;main.c: 129:                 _delay((unsigned long)((50)*(4000000/4000.0)));
  1189  05C1  3041               	movlw	65
  1190  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1191  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1192  05C4  00A9               	movwf	(??_regula_timer^(0+128)+1)
  1193  05C5  30ED               	movlw	237
  1194  05C6  00A8               	movwf	??_regula_timer^(0+128)
  1195  05C7                     u1997:
  1196  05C7  0BA8               	decfsz	??_regula_timer^(0+128),f
  1197  05C8  2DC7               	goto	u1997
  1198  05C9  0BA9               	decfsz	(??_regula_timer^(0+128)+1),f
  1199  05CA  2DC7               	goto	u1997
  1200  05CB  2DCC               	nop2
  1201  05CC  2D83               	goto	l125
  1202  05CD                     l129:
  1203  05CD  0008               	return
  1204  05CE                     __end_of_regula_timer:
  1205                           
  1206                           	psect	text2
  1207  0300                     __ptext2:	
  1208 ;; *************** function _mostra_timer *****************
  1209 ;; Defined at:
  1210 ;;		line 53 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          0       0       1       0       0
  1227 ;;      Totals:         0       0       1       0       0
  1228 ;;Total ram usage:        1 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 8
  1231 ;; This function calls:
  1232 ;;		_Lcd_Clear
  1233 ;;		_Lcd_Set_Cursor
  1234 ;;		_Lcd_Write_String
  1235 ;;		_sprintf
  1236 ;; This function is called by:
  1237 ;;		_regula_timer
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _mostra_timer
  1243  0300                     _mostra_timer:
  1244  0300                     l2071:	
  1245                           ;incstack = 0
  1246 ;; hardware stack exceeded
  1247                           ; Regs used in _mostra_timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1248                           
  1249                           
  1250                           ;main.c: 54:     if(contador_minutos>=60){
  1251  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0302  0851               	movf	_contador_minutos+1,w
  1254  0303  3A80               	xorlw	128
  1255  0304  00FF               	movwf	btemp+1
  1256  0305  3080               	movlw	128
  1257  0306  027F               	subwf	btemp+1,w
  1258  0307  1D03               	skipz
  1259  0308  2B0B               	goto	u1855
  1260  0309  303C               	movlw	60
  1261  030A  0250               	subwf	_contador_minutos,w
  1262  030B                     u1855:
  1263  030B  1C03               	skipc
  1264  030C  2B0E               	goto	u1851
  1265  030D  2B0F               	goto	u1850
  1266  030E                     u1851:
  1267  030E  2B20               	goto	l2077
  1268  030F                     u1850:
  1269  030F                     l2073:
  1270                           
  1271                           ;main.c: 55:         contador_minutos = contador_minutos - 60;
  1272  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0311  0850               	movf	_contador_minutos,w
  1275  0312  3EC4               	addlw	196
  1276  0313  00D0               	movwf	_contador_minutos
  1277  0314  0851               	movf	_contador_minutos+1,w
  1278  0315  1803               	skipnc
  1279  0316  3E01               	addlw	1
  1280  0317  3EFF               	addlw	255
  1281  0318  00D1               	movwf	_contador_minutos+1
  1282  0319                     l2075:
  1283                           
  1284                           ;main.c: 56:         contador_horas++;
  1285  0319  3001               	movlw	1
  1286  031A  07CE               	addwf	_contador_horas,f
  1287  031B  1803               	skipnc
  1288  031C  0ACF               	incf	_contador_horas+1,f
  1289  031D  3000               	movlw	0
  1290  031E  07CF               	addwf	_contador_horas+1,f
  1291                           
  1292                           ;main.c: 57:     }else{
  1293  031F  2B51               	goto	l2085
  1294  0320                     l2077:
  1295                           
  1296                           ;main.c: 58:         if(contador_minutos <= 0){
  1297  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0322  0851               	movf	_contador_minutos+1,w
  1300  0323  3A80               	xorlw	128
  1301  0324  00FF               	movwf	btemp+1
  1302  0325  3080               	movlw	128
  1303  0326  027F               	subwf	btemp+1,w
  1304  0327  1D03               	skipz
  1305  0328  2B2B               	goto	u1865
  1306  0329  3001               	movlw	1
  1307  032A  0250               	subwf	_contador_minutos,w
  1308  032B                     u1865:
  1309  032B  1803               	skipnc
  1310  032C  2B2E               	goto	u1861
  1311  032D  2B2F               	goto	u1860
  1312  032E                     u1861:
  1313  032E  2B51               	goto	l2085
  1314  032F                     u1860:
  1315  032F                     l2079:
  1316                           
  1317                           ;main.c: 59:             if(contador_horas <= 0){
  1318  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0331  084F               	movf	_contador_horas+1,w
  1321  0332  3A80               	xorlw	128
  1322  0333  00FF               	movwf	btemp+1
  1323  0334  3080               	movlw	128
  1324  0335  027F               	subwf	btemp+1,w
  1325  0336  1D03               	skipz
  1326  0337  2B3A               	goto	u1875
  1327  0338  3001               	movlw	1
  1328  0339  024E               	subwf	_contador_horas,w
  1329  033A                     u1875:
  1330  033A  1803               	skipnc
  1331  033B  2B3D               	goto	u1871
  1332  033C  2B3E               	goto	u1870
  1333  033D                     u1871:
  1334  033D  2B45               	goto	l2083
  1335  033E                     u1870:
  1336  033E                     l2081:
  1337                           
  1338                           ;main.c: 60:                 contador_minutos = 0;
  1339  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1340  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0340  01D0               	clrf	_contador_minutos
  1342  0341  01D1               	clrf	_contador_minutos+1
  1343                           
  1344                           ;main.c: 61:                 contador_horas = 0;
  1345  0342  01CE               	clrf	_contador_horas
  1346  0343  01CF               	clrf	_contador_horas+1
  1347                           
  1348                           ;main.c: 62:             }else{
  1349  0344  2B51               	goto	l2085
  1350  0345                     l2083:
  1351                           
  1352                           ;main.c: 63:                 contador_horas--;
  1353  0345  30FF               	movlw	255
  1354  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0348  07CE               	addwf	_contador_horas,f
  1357  0349  1803               	skipnc
  1358  034A  0ACF               	incf	_contador_horas+1,f
  1359  034B  30FF               	movlw	255
  1360  034C  07CF               	addwf	_contador_horas+1,f
  1361                           
  1362                           ;main.c: 64:                 contador_minutos = 59;
  1363  034D  303B               	movlw	59
  1364  034E  00D0               	movwf	_contador_minutos
  1365  034F  3000               	movlw	0
  1366  0350  00D1               	movwf	_contador_minutos+1
  1367  0351                     l2085:
  1368                           
  1369                           ;main.c: 69:     Lcd_Clear();
  1370  0351  120A  158A  2766  120A  118A  	fcall	_Lcd_Clear
  1371  0356                     l2087:
  1372                           
  1373                           ;main.c: 70:     Lcd_Set_Cursor(1, 1);
  1374  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0358  01BA               	clrf	Lcd_Set_Cursor@b
  1377  0359  0ABA               	incf	Lcd_Set_Cursor@b,f
  1378  035A  3001               	movlw	1
  1379  035B  120A  118A  24D9  120A  118A  	fcall	_Lcd_Set_Cursor
  1380  0360                     l2089:
  1381                           
  1382                           ;main.c: 71:     sprintf(timer, "%d:%d", contador_horas, contador_minutos);
  1383  0360  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1384  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1385  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1386  0363  00A7               	movwf	??_mostra_timer^(0+128)
  1387  0364  0827               	movf	??_mostra_timer^(0+128),w
  1388  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0367  00C4               	movwf	sprintf@f
  1391  0368  084F               	movf	_contador_horas+1,w
  1392  0369  00C6               	movwf	?_sprintf+2
  1393  036A  084E               	movf	_contador_horas,w
  1394  036B  00C5               	movwf	?_sprintf+1
  1395  036C  0851               	movf	_contador_minutos+1,w
  1396  036D  00C8               	movwf	?_sprintf+4
  1397  036E  0850               	movf	_contador_minutos,w
  1398  036F  00C7               	movwf	?_sprintf+3
  1399  0370  3054               	movlw	(low (_timer| 0))& (0+255)
  1400  0371  120A  118A  2029  120A  118A  	fcall	_sprintf
  1401  0376                     l2091:
  1402                           
  1403                           ;main.c: 72:     Lcd_Write_String(timer);
  1404  0376  3054               	movlw	(low (_timer| 0))& (0+255)
  1405  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0379  00BB               	movwf	Lcd_Write_String@a
  1408  037A  3000               	movlw	0
  1409  037B  00BC               	movwf	Lcd_Write_String@a+1
  1410  037C  120A  118A  2614  120A  118A  	fcall	_Lcd_Write_String
  1411  0381                     l113:
  1412  0381  0008               	return
  1413  0382                     __end_of_mostra_timer:
  1414                           
  1415                           	psect	text3
  1416  0029                     __ptext3:	
  1417 ;; *************** function _sprintf *****************
  1418 ;; Defined at:
  1419 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  sp              1    wreg     PTR unsigned char 
  1422 ;;		 -> timer(6), 
  1423 ;;  f               1   36[BANK0 ] PTR const unsigned char 
  1424 ;;		 -> STR_1(6), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  sp              1    5[BANK1 ] PTR unsigned char 
  1427 ;;		 -> timer(6), 
  1428 ;;  tmpval          4    0        struct .
  1429 ;;  val             2    3[BANK1 ] unsigned int 
  1430 ;;  cp              2    0        PTR const unsigned char 
  1431 ;;  len             2    0        unsigned int 
  1432 ;;  c               1    6[BANK1 ] unsigned char 
  1433 ;;  prec            1    2[BANK1 ] char 
  1434 ;;  flag            1    1[BANK1 ] unsigned char 
  1435 ;;  ap              1    0[BANK1 ] PTR void [1]
  1436 ;;		 -> ?_sprintf(2), 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2   36[BANK0 ] int 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       5       0       0       0
  1447 ;;      Locals:         0       0       7       0       0
  1448 ;;      Temps:          0       3       0       0       0
  1449 ;;      Totals:         0       8       7       0       0
  1450 ;;Total ram usage:       15 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 6
  1453 ;; This function calls:
  1454 ;;		___lwdiv
  1455 ;;		___lwmod
  1456 ;; This function is called by:
  1457 ;;		_mostra_timer
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _sprintf
  1463  0029                     _sprintf:
  1464                           
  1465                           ;incstack = 0
  1466 ;; hardware stack exceeded
  1467                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1468                           ;sprintf@sp stored from wreg
  1469  0029  1683               	bsf	3,5	;RP0=1, select bank1
  1470  002A  1303               	bcf	3,6	;RP1=0, select bank1
  1471  002B  00A5               	movwf	sprintf@sp^(0+128)
  1472  002C                     l2009:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1475  002C  3045               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1476  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1477  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1478  002F  00C9               	movwf	??_sprintf
  1479  0030  0849               	movf	??_sprintf,w
  1480  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0033  00A0               	movwf	sprintf@ap^(0+128)
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1485  0034  294C               	goto	l2061
  1486  0035                     l2011:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1489  0035  3025               	movlw	37
  1490  0036  0626               	xorwf	sprintf@c^(0+128),w
  1491  0037  1903               	btfsc	3,2
  1492  0038  283A               	goto	u1781
  1493  0039  283B               	goto	u1780
  1494  003A                     u1781:
  1495  003A  284F               	goto	l2017
  1496  003B                     u1780:
  1497  003B                     l2013:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1500  003B  0826               	movf	sprintf@c^(0+128),w
  1501  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1502  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1503  003E  00C9               	movwf	??_sprintf
  1504  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0041  0825               	movf	sprintf@sp^(0+128),w
  1507  0042  0084               	movwf	4
  1508  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0045  0849               	movf	??_sprintf,w
  1511  0046  1383               	bcf	3,7	;select IRP bank0
  1512  0047  0080               	movwf	0
  1513  0048                     l2015:
  1514  0048  3001               	movlw	1
  1515  0049  00C9               	movwf	??_sprintf
  1516  004A  0849               	movf	??_sprintf,w
  1517  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1518  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1519  004D  07A5               	addwf	sprintf@sp^(0+128),f
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1522  004E  294C               	goto	l2061
  1523  004F                     l2017:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1526  004F  01A1               	clrf	sprintf@flag^(0+128)
  1527  0050                     l2021:	
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1529                           
  1530  0050  3001               	movlw	1
  1531  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0053  07C4               	addwf	sprintf@f,f
  1534  0054  30FF               	movlw	-1
  1535  0055  0744               	addwf	sprintf@f,w
  1536  0056  0084               	movwf	4
  1537  0057  120A  118A  2664  120A  118A  	fcall	stringdir
  1538  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1539  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1540  005E  00A6               	movwf	sprintf@c^(0+128)
  1541  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0061  00C9               	movwf	??_sprintf
  1544  0062  01CA               	clrf	??_sprintf+1
  1545                           
  1546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1547                           ; Switch size 1, requested type "simple"
  1548                           ; Number of cases is 1, Range of values is 0 to 0
  1549                           ; switch strategies available:
  1550                           ; Name         Instructions Cycles
  1551                           ; simple_byte            4     3 (average)
  1552                           ; direct_byte           11     8 (fixed)
  1553                           ; jumptable            260     6 (fixed)
  1554                           ;	Chosen strategy is simple_byte
  1555  0063  084A               	movf	??_sprintf+1,w
  1556  0064  3A00               	xorlw	0	; case 0
  1557  0065  1903               	skipnz
  1558  0066  2868               	goto	l2235
  1559  0067  294C               	goto	l2061
  1560  0068                     l2235:
  1561                           
  1562                           ; Switch size 1, requested type "simple"
  1563                           ; Number of cases is 3, Range of values is 0 to 105
  1564                           ; switch strategies available:
  1565                           ; Name         Instructions Cycles
  1566                           ; simple_byte           10     6 (average)
  1567                           ; jumptable            260     6 (fixed)
  1568                           ;	Chosen strategy is simple_byte
  1569  0068  0849               	movf	??_sprintf,w
  1570  0069  3A00               	xorlw	0	; case 0
  1571  006A  1903               	skipnz
  1572  006B  2961               	goto	l2063
  1573  006C  3A64               	xorlw	100	; case 100
  1574  006D  1903               	skipnz
  1575  006E  2873               	goto	l2023
  1576  006F  3A0D               	xorlw	13	; case 105
  1577  0070  1903               	skipnz
  1578  0071  2873               	goto	l2023
  1579  0072  294C               	goto	l2061
  1580  0073                     l2023:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1583  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0075  0820               	movf	sprintf@ap^(0+128),w
  1586  0076  0084               	movwf	4
  1587  0077  1383               	bcf	3,7	;select IRP bank0
  1588  0078  0800               	movf	0,w
  1589  0079  00A3               	movwf	sprintf@val^(0+128)
  1590  007A  0A84               	incf	4,f
  1591  007B  0800               	movf	0,w
  1592  007C  00A4               	movwf	(sprintf@val+1)^(0+128)
  1593  007D                     l2025:
  1594  007D  3002               	movlw	2
  1595  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1596  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0080  00C9               	movwf	??_sprintf
  1598  0081  0849               	movf	??_sprintf,w
  1599  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0084  07A0               	addwf	sprintf@ap^(0+128),f
  1602  0085                     l2027:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1605  0085  1FA4               	btfss	(sprintf@val+1)^(0+128),7
  1606  0086  2888               	goto	u1791
  1607  0087  2889               	goto	u1790
  1608  0088                     u1791:
  1609  0088  2896               	goto	l2033
  1610  0089                     u1790:
  1611  0089                     l2029:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1614  0089  3003               	movlw	3
  1615  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1616  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1617  008C  00C9               	movwf	??_sprintf
  1618  008D  0849               	movf	??_sprintf,w
  1619  008E  1683               	bsf	3,5	;RP0=1, select bank1
  1620  008F  1303               	bcf	3,6	;RP1=0, select bank1
  1621  0090  04A1               	iorwf	sprintf@flag^(0+128),f
  1622  0091                     l2031:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1625  0091  09A3               	comf	sprintf@val^(0+128),f
  1626  0092  09A4               	comf	(sprintf@val+1)^(0+128),f
  1627  0093  0AA3               	incf	sprintf@val^(0+128),f
  1628  0094  1903               	skipnz
  1629  0095  0AA4               	incf	(sprintf@val+1)^(0+128),f
  1630  0096                     l2033:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1633  0096  01A6               	clrf	sprintf@c^(0+128)
  1634  0097  0AA6               	incf	sprintf@c^(0+128),f
  1635  0098                     l2039:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1638  0098  0826               	movf	sprintf@c^(0+128),w
  1639  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1640  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1641  009B  00C9               	movwf	??_sprintf
  1642  009C  0749               	addwf	??_sprintf,w
  1643  009D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1644  009E  0084               	movwf	4
  1645  009F  120A  118A  2664  120A  118A  	fcall	stringdir
  1646  00A4  00CA               	movwf	??_sprintf+1
  1647  00A5  120A  118A  2664  120A  118A  	fcall	stringdir
  1648  00AA  00CB               	movwf	??_sprintf+2
  1649  00AB  084B               	movf	??_sprintf+2,w
  1650  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1651  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1652  00AE  0224               	subwf	(sprintf@val+1)^(0+128),w
  1653  00AF  1D03               	skipz
  1654  00B0  28B7               	goto	u1805
  1655  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1656  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1657  00B3  084A               	movf	??_sprintf+1,w
  1658  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1659  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1660  00B6  0223               	subwf	sprintf@val^(0+128),w
  1661  00B7                     u1805:
  1662  00B7  1803               	skipnc
  1663  00B8  28BA               	goto	u1801
  1664  00B9  28BB               	goto	u1800
  1665  00BA                     u1801:
  1666  00BA  28BC               	goto	l2043
  1667  00BB                     u1800:
  1668  00BB  28CA               	goto	l2045
  1669  00BC                     l2043:
  1670  00BC  3001               	movlw	1
  1671  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1672  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1673  00BF  00C9               	movwf	??_sprintf
  1674  00C0  0849               	movf	??_sprintf,w
  1675  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1676  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1677  00C3  07A6               	addwf	sprintf@c^(0+128),f
  1678  00C4  3005               	movlw	5
  1679  00C5  0626               	xorwf	sprintf@c^(0+128),w
  1680  00C6  1D03               	btfss	3,2
  1681  00C7  28C9               	goto	u1811
  1682  00C8  28CA               	goto	u1810
  1683  00C9                     u1811:
  1684  00C9  2898               	goto	l2039
  1685  00CA                     u1810:
  1686  00CA                     l2045:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1689  00CA  0821               	movf	sprintf@flag^(0+128),w
  1690  00CB  3903               	andlw	3
  1691  00CC  1903               	btfsc	3,2
  1692  00CD  28CF               	goto	u1821
  1693  00CE  28D0               	goto	u1820
  1694  00CF                     u1821:
  1695  00CF  28E3               	goto	l2051
  1696  00D0                     u1820:
  1697  00D0                     l2047:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1700  00D0  302D               	movlw	45
  1701  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1702  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1703  00D3  00C9               	movwf	??_sprintf
  1704  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1705  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1706  00D6  0825               	movf	sprintf@sp^(0+128),w
  1707  00D7  0084               	movwf	4
  1708  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1709  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1710  00DA  0849               	movf	??_sprintf,w
  1711  00DB  1383               	bcf	3,7	;select IRP bank0
  1712  00DC  0080               	movwf	0
  1713  00DD                     l2049:
  1714  00DD  3001               	movlw	1
  1715  00DE  00C9               	movwf	??_sprintf
  1716  00DF  0849               	movf	??_sprintf,w
  1717  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1718  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1719  00E2  07A5               	addwf	sprintf@sp^(0+128),f
  1720  00E3                     l2051:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1723  00E3  0826               	movf	sprintf@c^(0+128),w
  1724  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1725  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1726  00E6  00C9               	movwf	??_sprintf
  1727  00E7  0849               	movf	??_sprintf,w
  1728  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1729  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1730  00EA  00A2               	movwf	sprintf@prec^(0+128)
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1733  00EB  293F               	goto	l2059
  1734  00EC                     l2053:
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1737  00EC  300A               	movlw	10
  1738  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1739  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1740  00EF  00BE               	movwf	___lwmod@divisor
  1741  00F0  3000               	movlw	0
  1742  00F1  00BF               	movwf	___lwmod@divisor+1
  1743  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1744  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1745  00F4  0822               	movf	sprintf@prec^(0+128),w
  1746  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1747  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1748  00F7  00C9               	movwf	??_sprintf
  1749  00F8  0749               	addwf	??_sprintf,w
  1750  00F9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1751  00FA  0084               	movwf	4
  1752  00FB  120A  118A  2664  120A  118A  	fcall	stringdir
  1753  0100  00B6               	movwf	___lwdiv@divisor
  1754  0101  120A  118A  2664  120A  118A  	fcall	stringdir
  1755  0106  00B7               	movwf	___lwdiv@divisor+1
  1756  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0109  0824               	movf	(sprintf@val+1)^(0+128),w
  1759  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1760  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1761  010C  00B9               	movwf	___lwdiv@dividend+1
  1762  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1763  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1764  010F  0823               	movf	sprintf@val^(0+128),w
  1765  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0112  00B8               	movwf	___lwdiv@dividend
  1768  0113  120A  118A  25CE  120A  118A  	fcall	___lwdiv
  1769  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1771  011A  0837               	movf	?___lwdiv+1,w
  1772  011B  00C1               	movwf	___lwmod@dividend+1
  1773  011C  0836               	movf	?___lwdiv,w
  1774  011D  00C0               	movwf	___lwmod@dividend
  1775  011E  120A  118A  2762  120A  118A  	fcall	___lwmod
  1776  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0125  083E               	movf	?___lwmod,w
  1779  0126  3E30               	addlw	48
  1780  0127  00CA               	movwf	??_sprintf+1
  1781  0128  084A               	movf	??_sprintf+1,w
  1782  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1783  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1784  012B  00A6               	movwf	sprintf@c^(0+128)
  1785  012C                     l2055:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1788  012C  0826               	movf	sprintf@c^(0+128),w
  1789  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1790  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1791  012F  00C9               	movwf	??_sprintf
  1792  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0132  0825               	movf	sprintf@sp^(0+128),w
  1795  0133  0084               	movwf	4
  1796  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0136  0849               	movf	??_sprintf,w
  1799  0137  1383               	bcf	3,7	;select IRP bank0
  1800  0138  0080               	movwf	0
  1801  0139                     l2057:
  1802  0139  3001               	movlw	1
  1803  013A  00C9               	movwf	??_sprintf
  1804  013B  0849               	movf	??_sprintf,w
  1805  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1806  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1807  013E  07A5               	addwf	sprintf@sp^(0+128),f
  1808  013F                     l2059:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1811  013F  30FF               	movlw	255
  1812  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0142  00C9               	movwf	??_sprintf
  1815  0143  0849               	movf	??_sprintf,w
  1816  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0146  07A2               	addwf	sprintf@prec^(0+128),f
  1819  0147  0A22               	incf	sprintf@prec^(0+128),w
  1820  0148  1D03               	btfss	3,2
  1821  0149  294B               	goto	u1831
  1822  014A  294C               	goto	u1830
  1823  014B                     u1831:
  1824  014B  28EC               	goto	l2053
  1825  014C                     u1830:
  1826  014C                     l2061:
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1829  014C  3001               	movlw	1
  1830  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1831  014E  07C4               	addwf	sprintf@f,f
  1832  014F  30FF               	movlw	-1
  1833  0150  0744               	addwf	sprintf@f,w
  1834  0151  0084               	movwf	4
  1835  0152  120A  118A  2664  120A  118A  	fcall	stringdir
  1836  0157  00C9               	movwf	??_sprintf
  1837  0158  0849               	movf	??_sprintf,w
  1838  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1839  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1840  015B  00A6               	movwf	sprintf@c^(0+128)
  1841  015C  0826               	movf	sprintf@c^(0+128),w
  1842  015D  1D03               	btfss	3,2
  1843  015E  2960               	goto	u1841
  1844  015F  2961               	goto	u1840
  1845  0160                     u1841:
  1846  0160  2835               	goto	l2011
  1847  0161                     u1840:
  1848  0161                     l2063:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1851  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0163  0825               	movf	sprintf@sp^(0+128),w
  1854  0164  0084               	movwf	4
  1855  0165  1383               	bcf	3,7	;select IRP bank0
  1856  0166  0180               	clrf	0
  1857  0167                     l255:
  1858  0167  0008               	return
  1859  0168                     __end_of_sprintf:
  1860                           
  1861                           	psect	text4
  1862  0762                     __ptext4:	
  1863 ;; *************** function ___lwmod *****************
  1864 ;; Defined at:
  1865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  divisor         2   30[BANK0 ] unsigned int 
  1868 ;;  dividend        2   32[BANK0 ] unsigned int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  counter         1   35[BANK0 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2   30[BANK0 ] unsigned int 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       4       0       0       0
  1881 ;;      Locals:         0       1       0       0       0
  1882 ;;      Temps:          0       1       0       0       0
  1883 ;;      Totals:         0       6       0       0       0
  1884 ;;Total ram usage:        6 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 5
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_sprintf
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function ___lwmod
  1896  0762                     ___lwmod:
  1897  0762                     l1987:	
  1898                           ;incstack = 0
  1899 ;; hardware stack exceeded
  1900                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1901                           
  1902  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0764  083E               	movf	___lwmod@divisor,w
  1905  0765  043F               	iorwf	___lwmod@divisor+1,w
  1906  0766  1903               	btfsc	3,2
  1907  0767  2F69               	goto	u1721
  1908  0768  2F6A               	goto	u1720
  1909  0769                     u1721:
  1910  0769  2F99               	goto	l2005
  1911  076A                     u1720:
  1912  076A                     l1989:
  1913  076A  01C3               	clrf	___lwmod@counter
  1914  076B  0AC3               	incf	___lwmod@counter,f
  1915  076C  2F78               	goto	l1995
  1916  076D                     l1991:
  1917  076D  3001               	movlw	1
  1918  076E                     u1735:
  1919  076E  1003               	clrc
  1920  076F  0DBE               	rlf	___lwmod@divisor,f
  1921  0770  0DBF               	rlf	___lwmod@divisor+1,f
  1922  0771  3EFF               	addlw	-1
  1923  0772  1D03               	skipz
  1924  0773  2F6E               	goto	u1735
  1925  0774                     l1993:
  1926  0774  3001               	movlw	1
  1927  0775  00C2               	movwf	??___lwmod
  1928  0776  0842               	movf	??___lwmod,w
  1929  0777  07C3               	addwf	___lwmod@counter,f
  1930  0778                     l1995:
  1931  0778  1FBF               	btfss	___lwmod@divisor+1,7
  1932  0779  2F7B               	goto	u1741
  1933  077A  2F7C               	goto	u1740
  1934  077B                     u1741:
  1935  077B  2F6D               	goto	l1991
  1936  077C                     u1740:
  1937  077C                     l1997:
  1938  077C  083F               	movf	___lwmod@divisor+1,w
  1939  077D  0241               	subwf	___lwmod@dividend+1,w
  1940  077E  1D03               	skipz
  1941  077F  2F82               	goto	u1755
  1942  0780  083E               	movf	___lwmod@divisor,w
  1943  0781  0240               	subwf	___lwmod@dividend,w
  1944  0782                     u1755:
  1945  0782  1C03               	skipc
  1946  0783  2F85               	goto	u1751
  1947  0784  2F86               	goto	u1750
  1948  0785                     u1751:
  1949  0785  2F8C               	goto	l2001
  1950  0786                     u1750:
  1951  0786                     l1999:
  1952  0786  083E               	movf	___lwmod@divisor,w
  1953  0787  02C0               	subwf	___lwmod@dividend,f
  1954  0788  083F               	movf	___lwmod@divisor+1,w
  1955  0789  1C03               	skipc
  1956  078A  03C1               	decf	___lwmod@dividend+1,f
  1957  078B  02C1               	subwf	___lwmod@dividend+1,f
  1958  078C                     l2001:
  1959  078C  3001               	movlw	1
  1960  078D                     u1765:
  1961  078D  1003               	clrc
  1962  078E  0CBF               	rrf	___lwmod@divisor+1,f
  1963  078F  0CBE               	rrf	___lwmod@divisor,f
  1964  0790  3EFF               	addlw	-1
  1965  0791  1D03               	skipz
  1966  0792  2F8D               	goto	u1765
  1967  0793                     l2003:
  1968  0793  3001               	movlw	1
  1969  0794  02C3               	subwf	___lwmod@counter,f
  1970  0795  1D03               	btfss	3,2
  1971  0796  2F98               	goto	u1771
  1972  0797  2F99               	goto	u1770
  1973  0798                     u1771:
  1974  0798  2F7C               	goto	l1997
  1975  0799                     u1770:
  1976  0799                     l2005:
  1977  0799  0841               	movf	___lwmod@dividend+1,w
  1978  079A  00BF               	movwf	?___lwmod+1
  1979  079B  0840               	movf	___lwmod@dividend,w
  1980  079C  00BE               	movwf	?___lwmod
  1981  079D                     l541:
  1982  079D  0008               	return
  1983  079E                     __end_of___lwmod:
  1984                           
  1985                           	psect	text5
  1986  05CE                     __ptext5:	
  1987 ;; *************** function ___lwdiv *****************
  1988 ;; Defined at:
  1989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  divisor         2   22[BANK0 ] unsigned int 
  1992 ;;  dividend        2   24[BANK0 ] unsigned int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  quotient        2   28[BANK0 ] unsigned int 
  1995 ;;  counter         1   27[BANK0 ] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2   22[BANK0 ] unsigned int 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       4       0       0       0
  2006 ;;      Locals:         0       3       0       0       0
  2007 ;;      Temps:          0       1       0       0       0
  2008 ;;      Totals:         0       8       0       0       0
  2009 ;;Total ram usage:        8 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 5
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_sprintf
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function ___lwdiv
  2021  05CE                     ___lwdiv:
  2022  05CE                     l1961:	
  2023                           ;incstack = 0
  2024 ;; hardware stack exceeded
  2025                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2026                           
  2027  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2028  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2029  05D0  01BC               	clrf	___lwdiv@quotient
  2030  05D1  01BD               	clrf	___lwdiv@quotient+1
  2031  05D2                     l1963:
  2032  05D2  0836               	movf	___lwdiv@divisor,w
  2033  05D3  0437               	iorwf	___lwdiv@divisor+1,w
  2034  05D4  1903               	btfsc	3,2
  2035  05D5  2DD7               	goto	u1651
  2036  05D6  2DD8               	goto	u1650
  2037  05D7                     u1651:
  2038  05D7  2E0F               	goto	l1983
  2039  05D8                     u1650:
  2040  05D8                     l1965:
  2041  05D8  01BB               	clrf	___lwdiv@counter
  2042  05D9  0ABB               	incf	___lwdiv@counter,f
  2043  05DA  2DE6               	goto	l1971
  2044  05DB                     l1967:
  2045  05DB  3001               	movlw	1
  2046  05DC                     u1665:
  2047  05DC  1003               	clrc
  2048  05DD  0DB6               	rlf	___lwdiv@divisor,f
  2049  05DE  0DB7               	rlf	___lwdiv@divisor+1,f
  2050  05DF  3EFF               	addlw	-1
  2051  05E0  1D03               	skipz
  2052  05E1  2DDC               	goto	u1665
  2053  05E2                     l1969:
  2054  05E2  3001               	movlw	1
  2055  05E3  00BA               	movwf	??___lwdiv
  2056  05E4  083A               	movf	??___lwdiv,w
  2057  05E5  07BB               	addwf	___lwdiv@counter,f
  2058  05E6                     l1971:
  2059  05E6  1FB7               	btfss	___lwdiv@divisor+1,7
  2060  05E7  2DE9               	goto	u1671
  2061  05E8  2DEA               	goto	u1670
  2062  05E9                     u1671:
  2063  05E9  2DDB               	goto	l1967
  2064  05EA                     u1670:
  2065  05EA                     l1973:
  2066  05EA  3001               	movlw	1
  2067  05EB                     u1685:
  2068  05EB  1003               	clrc
  2069  05EC  0DBC               	rlf	___lwdiv@quotient,f
  2070  05ED  0DBD               	rlf	___lwdiv@quotient+1,f
  2071  05EE  3EFF               	addlw	-1
  2072  05EF  1D03               	skipz
  2073  05F0  2DEB               	goto	u1685
  2074  05F1  0837               	movf	___lwdiv@divisor+1,w
  2075  05F2  0239               	subwf	___lwdiv@dividend+1,w
  2076  05F3  1D03               	skipz
  2077  05F4  2DF7               	goto	u1695
  2078  05F5  0836               	movf	___lwdiv@divisor,w
  2079  05F6  0238               	subwf	___lwdiv@dividend,w
  2080  05F7                     u1695:
  2081  05F7  1C03               	skipc
  2082  05F8  2DFA               	goto	u1691
  2083  05F9  2DFB               	goto	u1690
  2084  05FA                     u1691:
  2085  05FA  2E02               	goto	l1979
  2086  05FB                     u1690:
  2087  05FB                     l1975:
  2088  05FB  0836               	movf	___lwdiv@divisor,w
  2089  05FC  02B8               	subwf	___lwdiv@dividend,f
  2090  05FD  0837               	movf	___lwdiv@divisor+1,w
  2091  05FE  1C03               	skipc
  2092  05FF  03B9               	decf	___lwdiv@dividend+1,f
  2093  0600  02B9               	subwf	___lwdiv@dividend+1,f
  2094  0601                     l1977:
  2095  0601  143C               	bsf	___lwdiv@quotient,0
  2096  0602                     l1979:
  2097  0602  3001               	movlw	1
  2098  0603                     u1705:
  2099  0603  1003               	clrc
  2100  0604  0CB7               	rrf	___lwdiv@divisor+1,f
  2101  0605  0CB6               	rrf	___lwdiv@divisor,f
  2102  0606  3EFF               	addlw	-1
  2103  0607  1D03               	skipz
  2104  0608  2E03               	goto	u1705
  2105  0609                     l1981:
  2106  0609  3001               	movlw	1
  2107  060A  02BB               	subwf	___lwdiv@counter,f
  2108  060B  1D03               	btfss	3,2
  2109  060C  2E0E               	goto	u1711
  2110  060D  2E0F               	goto	u1710
  2111  060E                     u1711:
  2112  060E  2DEA               	goto	l1973
  2113  060F                     u1710:
  2114  060F                     l1983:
  2115  060F  083D               	movf	___lwdiv@quotient+1,w
  2116  0610  00B7               	movwf	?___lwdiv+1
  2117  0611  083C               	movf	___lwdiv@quotient,w
  2118  0612  00B6               	movwf	?___lwdiv
  2119  0613                     l531:
  2120  0613  0008               	return
  2121  0614                     __end_of___lwdiv:
  2122                           
  2123                           	psect	text6
  2124  0614                     __ptext6:	
  2125 ;; *************** function _Lcd_Write_String *****************
  2126 ;; Defined at:
  2127 ;;		line 97 in file "./lcd.h"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  a               2   27[BANK0 ] PTR unsigned char 
  2130 ;;		 -> STR_4(6), STR_3(19), STR_2(12), timer(6), 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  i               2   32[BANK0 ] int 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       2       0       0       0
  2143 ;;      Locals:         0       2       0       0       0
  2144 ;;      Temps:          0       3       0       0       0
  2145 ;;      Totals:         0       7       0       0       0
  2146 ;;Total ram usage:        7 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 7
  2149 ;; This function calls:
  2150 ;;		_Lcd_Write_Char
  2151 ;; This function is called by:
  2152 ;;		_mostra_timer
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _Lcd_Write_String
  2159  0614                     _Lcd_Write_String:
  2160  0614                     l1483:	
  2161                           ;incstack = 0
  2162 ;; hardware stack exceeded
  2163                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2164                           
  2165                           
  2166                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2167  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0616  01C0               	clrf	Lcd_Write_String@i
  2170  0617  01C1               	clrf	Lcd_Write_String@i+1
  2171  0618  2E3D               	goto	l1489
  2172  0619                     l1485:
  2173                           
  2174                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2175  0619  0840               	movf	Lcd_Write_String@i,w
  2176  061A  073B               	addwf	Lcd_Write_String@a,w
  2177  061B  00BE               	movwf	??_Lcd_Write_String+1
  2178  061C  083C               	movf	Lcd_Write_String@a+1,w
  2179  061D  00BD               	movwf	??_Lcd_Write_String
  2180  061E  1803               	skipnc
  2181  061F  0ABD               	incf	??_Lcd_Write_String,f
  2182  0620  1FC0               	btfss	Lcd_Write_String@i,7
  2183  0621  2E23               	goto	u1090
  2184  0622  03BD               	decf	??_Lcd_Write_String,f
  2185  0623                     u1090:
  2186  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0625  083D               	movf	??_Lcd_Write_String,w
  2189  0626  00BF               	movwf	??_Lcd_Write_String+2
  2190  0627  083F               	movf	??_Lcd_Write_String+2,w
  2191  0628  00FF               	movwf	btemp+1
  2192  0629  083E               	movf	??_Lcd_Write_String+1,w
  2193  062A  0084               	movwf	4
  2194  062B  120A  118A  265A  120A  118A  	fcall	stringtab
  2195  0630  120A  118A  2725  120A  118A  	fcall	_Lcd_Write_Char
  2196  0635                     l1487:
  2197  0635  3001               	movlw	1
  2198  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0638  07C0               	addwf	Lcd_Write_String@i,f
  2201  0639  1803               	skipnc
  2202  063A  0AC1               	incf	Lcd_Write_String@i+1,f
  2203  063B  3000               	movlw	0
  2204  063C  07C1               	addwf	Lcd_Write_String@i+1,f
  2205  063D                     l1489:
  2206  063D  0840               	movf	Lcd_Write_String@i,w
  2207  063E  073B               	addwf	Lcd_Write_String@a,w
  2208  063F  00BE               	movwf	??_Lcd_Write_String+1
  2209  0640  083C               	movf	Lcd_Write_String@a+1,w
  2210  0641  00BD               	movwf	??_Lcd_Write_String
  2211  0642  1803               	skipnc
  2212  0643  0ABD               	incf	??_Lcd_Write_String,f
  2213  0644  1FC0               	btfss	Lcd_Write_String@i,7
  2214  0645  2E47               	goto	u1100
  2215  0646  03BD               	decf	??_Lcd_Write_String,f
  2216  0647                     u1100:
  2217  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0649  083D               	movf	??_Lcd_Write_String,w
  2220  064A  00BF               	movwf	??_Lcd_Write_String+2
  2221  064B  083F               	movf	??_Lcd_Write_String+2,w
  2222  064C  00FF               	movwf	btemp+1
  2223  064D  083E               	movf	??_Lcd_Write_String+1,w
  2224  064E  0084               	movwf	4
  2225  064F  120A  118A  265A  120A  118A  	fcall	stringtab
  2226  0654  3A00               	xorlw	0
  2227  0655  1D03               	skipz
  2228  0656  2E58               	goto	u1111
  2229  0657  2E59               	goto	u1110
  2230  0658                     u1111:
  2231  0658  2E19               	goto	l1485
  2232  0659                     u1110:
  2233  0659                     l99:
  2234  0659  0008               	return
  2235  065A                     __end_of_Lcd_Write_String:
  2236                           
  2237                           	psect	text7
  2238  0725                     __ptext7:	
  2239 ;; *************** function _Lcd_Write_Char *****************
  2240 ;; Defined at:
  2241 ;;		line 81 in file "./lcd.h"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  a               1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  a               1   26[BANK0 ] unsigned char 
  2246 ;;  y               1   25[BANK0 ] unsigned char 
  2247 ;;  templcd         1   24[BANK0 ] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         0       3       0       0       0
  2259 ;;      Temps:          0       1       0       0       0
  2260 ;;      Totals:         0       4       0       0       0
  2261 ;;Total ram usage:        4 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 6
  2264 ;; This function calls:
  2265 ;;		_Lcd_Port
  2266 ;; This function is called by:
  2267 ;;		_Lcd_Write_String
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _Lcd_Write_Char
  2273  0725                     _Lcd_Write_Char:
  2274                           
  2275                           ;incstack = 0
  2276 ;; hardware stack exceeded
  2277                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2278                           ;Lcd_Write_Char@a stored from wreg
  2279  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0727  00BA               	movwf	Lcd_Write_Char@a
  2282  0728                     l1383:
  2283                           
  2284                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char templcd,y;
      +                          ;./lcd.h: 84:    templcd = a&0x0F;
  2285  0728  083A               	movf	Lcd_Write_Char@a,w
  2286  0729  390F               	andlw	15
  2287  072A  00B7               	movwf	??_Lcd_Write_Char
  2288  072B  0837               	movf	??_Lcd_Write_Char,w
  2289  072C  00B8               	movwf	Lcd_Write_Char@templcd
  2290                           
  2291                           ;./lcd.h: 85:    y = a&0xF0;
  2292  072D  083A               	movf	Lcd_Write_Char@a,w
  2293  072E  39F0               	andlw	240
  2294  072F  00B7               	movwf	??_Lcd_Write_Char
  2295  0730  0837               	movf	??_Lcd_Write_Char,w
  2296  0731  00B9               	movwf	Lcd_Write_Char@y
  2297  0732                     l1385:
  2298                           
  2299                           ;./lcd.h: 86:    RD2 = 1;
  2300  0732  1508               	bsf	8,2	;volatile
  2301  0733                     l1387:
  2302                           
  2303                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  2304  0733  0839               	movf	Lcd_Write_Char@y,w
  2305  0734  00B7               	movwf	??_Lcd_Write_Char
  2306  0735  3004               	movlw	4
  2307  0736                     u875:
  2308  0736  1003               	clrc
  2309  0737  0CB7               	rrf	??_Lcd_Write_Char,f
  2310  0738  3EFF               	addlw	-1
  2311  0739  1D03               	skipz
  2312  073A  2F36               	goto	u875
  2313  073B  0837               	movf	??_Lcd_Write_Char,w
  2314  073C  120A  158A  27A9  120A  118A  	fcall	_Lcd_Port
  2315  0741                     l1389:
  2316                           
  2317                           ;./lcd.h: 88:    RD3 = 1;
  2318  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0743  1588               	bsf	8,3	;volatile
  2321  0744                     l1391:
  2322                           
  2323                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2324  0744  300C               	movlw	12
  2325  0745  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0746  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0747  00B7               	movwf	??_Lcd_Write_Char
  2328  0748                     u2007:
  2329  0748  0BB7               	decfsz	??_Lcd_Write_Char,f
  2330  0749  2F48               	goto	u2007
  2331  074A  0000               	nop
  2332  074B                     l1393:
  2333                           
  2334                           ;./lcd.h: 90:    RD3 = 0;
  2335  074B  1283               	bcf	3,5	;RP0=0, select bank0
  2336  074C  1303               	bcf	3,6	;RP1=0, select bank0
  2337  074D  1188               	bcf	8,3	;volatile
  2338  074E                     l1395:
  2339                           
  2340                           ;./lcd.h: 91:    Lcd_Port(templcd);
  2341  074E  0838               	movf	Lcd_Write_Char@templcd,w
  2342  074F  120A  158A  27A9  120A  118A  	fcall	_Lcd_Port
  2343  0754                     l1397:
  2344                           
  2345                           ;./lcd.h: 92:    RD3 = 1;
  2346  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0756  1588               	bsf	8,3	;volatile
  2349  0757                     l1399:
  2350                           
  2351                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2352  0757  300C               	movlw	12
  2353  0758  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0759  1303               	bcf	3,6	;RP1=0, select bank0
  2355  075A  00B7               	movwf	??_Lcd_Write_Char
  2356  075B                     u2017:
  2357  075B  0BB7               	decfsz	??_Lcd_Write_Char,f
  2358  075C  2F5B               	goto	u2017
  2359  075D  0000               	nop
  2360  075E                     l1401:
  2361                           
  2362                           ;./lcd.h: 94:    RD3 = 0;
  2363  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2364  075F  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0760  1188               	bcf	8,3	;volatile
  2366  0761                     l93:
  2367  0761  0008               	return
  2368  0762                     __end_of_Lcd_Write_Char:
  2369                           
  2370                           	psect	text8
  2371  04D9                     __ptext8:	
  2372 ;; *************** function _Lcd_Set_Cursor *****************
  2373 ;; Defined at:
  2374 ;;		line 41 in file "./lcd.h"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  a               1    wreg     unsigned char 
  2377 ;;  b               1   26[BANK0 ] unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  a               1   29[BANK0 ] unsigned char 
  2380 ;;  templcd         1   32[BANK0 ] unsigned char 
  2381 ;;  y               1   31[BANK0 ] unsigned char 
  2382 ;;  z               1   30[BANK0 ] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       1       0       0       0
  2393 ;;      Locals:         0       4       0       0       0
  2394 ;;      Temps:          0       2       0       0       0
  2395 ;;      Totals:         0       7       0       0       0
  2396 ;;Total ram usage:        7 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 7
  2399 ;; This function calls:
  2400 ;;		_Lcd_Cmd
  2401 ;; This function is called by:
  2402 ;;		_mostra_timer
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function _Lcd_Set_Cursor
  2409  04D9                     _Lcd_Set_Cursor:
  2410                           
  2411                           ;incstack = 0
  2412 ;; hardware stack exceeded
  2413                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2414                           ;Lcd_Set_Cursor@a stored from wreg
  2415  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2416  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2417  04DB  00BD               	movwf	Lcd_Set_Cursor@a
  2418  04DC                     l1463:
  2419                           
  2420                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          lcd,z,y;;./lcd.h: 44:  if(a == 1)
  2421  04DC  033D               	decf	Lcd_Set_Cursor@a,w
  2422  04DD  1D03               	btfss	3,2
  2423  04DE  2CE0               	goto	u1051
  2424  04DF  2CE1               	goto	u1050
  2425  04E0                     u1051:
  2426  04E0  2D06               	goto	l1473
  2427  04E1                     u1050:
  2428  04E1                     l1465:
  2429                           
  2430                           ;./lcd.h: 45:  {;./lcd.h: 46:    templcd = 0x80 + b - 1;
  2431  04E1  083A               	movf	Lcd_Set_Cursor@b,w
  2432  04E2  3E7F               	addlw	127
  2433  04E3  00BB               	movwf	??_Lcd_Set_Cursor
  2434  04E4  083B               	movf	??_Lcd_Set_Cursor,w
  2435  04E5  00C0               	movwf	Lcd_Set_Cursor@templcd
  2436                           
  2437                           ;./lcd.h: 47:   z = templcd>>4;
  2438  04E6  0840               	movf	Lcd_Set_Cursor@templcd,w
  2439  04E7  00BB               	movwf	??_Lcd_Set_Cursor
  2440  04E8  3004               	movlw	4
  2441  04E9                     u1065:
  2442  04E9  1003               	clrc
  2443  04EA  0CBB               	rrf	??_Lcd_Set_Cursor,f
  2444  04EB  3EFF               	addlw	-1
  2445  04EC  1D03               	skipz
  2446  04ED  2CE9               	goto	u1065
  2447  04EE  083B               	movf	??_Lcd_Set_Cursor,w
  2448  04EF  00BC               	movwf	??_Lcd_Set_Cursor+1
  2449  04F0  083C               	movf	??_Lcd_Set_Cursor+1,w
  2450  04F1  00BE               	movwf	Lcd_Set_Cursor@z
  2451  04F2                     l1467:
  2452                           
  2453                           ;./lcd.h: 48:   y = templcd & 0x0F;
  2454  04F2  0840               	movf	Lcd_Set_Cursor@templcd,w
  2455  04F3  390F               	andlw	15
  2456  04F4  00BB               	movwf	??_Lcd_Set_Cursor
  2457  04F5  083B               	movf	??_Lcd_Set_Cursor,w
  2458  04F6  00BF               	movwf	Lcd_Set_Cursor@y
  2459  04F7                     l1469:
  2460                           
  2461                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2462  04F7  083E               	movf	Lcd_Set_Cursor@z,w
  2463  04F8  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2464  04FD                     l1471:
  2465                           
  2466                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2467  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2468  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2469  04FF  083F               	movf	Lcd_Set_Cursor@y,w
  2470  0500  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2471                           
  2472                           ;./lcd.h: 51:  }
  2473  0505  2D30               	goto	l87
  2474  0506                     l1473:
  2475  0506  3002               	movlw	2
  2476  0507  063D               	xorwf	Lcd_Set_Cursor@a,w
  2477  0508  1D03               	btfss	3,2
  2478  0509  2D0B               	goto	u1071
  2479  050A  2D0C               	goto	u1070
  2480  050B                     u1071:
  2481  050B  2D30               	goto	l87
  2482  050C                     u1070:
  2483  050C                     l1475:
  2484                           
  2485                           ;./lcd.h: 53:  {;./lcd.h: 54:   templcd = 0xC0 + b - 1;
  2486  050C  083A               	movf	Lcd_Set_Cursor@b,w
  2487  050D  3EBF               	addlw	191
  2488  050E  00BB               	movwf	??_Lcd_Set_Cursor
  2489  050F  083B               	movf	??_Lcd_Set_Cursor,w
  2490  0510  00C0               	movwf	Lcd_Set_Cursor@templcd
  2491                           
  2492                           ;./lcd.h: 55:   z = templcd>>4;
  2493  0511  0840               	movf	Lcd_Set_Cursor@templcd,w
  2494  0512  00BB               	movwf	??_Lcd_Set_Cursor
  2495  0513  3004               	movlw	4
  2496  0514                     u1085:
  2497  0514  1003               	clrc
  2498  0515  0CBB               	rrf	??_Lcd_Set_Cursor,f
  2499  0516  3EFF               	addlw	-1
  2500  0517  1D03               	skipz
  2501  0518  2D14               	goto	u1085
  2502  0519  083B               	movf	??_Lcd_Set_Cursor,w
  2503  051A  00BC               	movwf	??_Lcd_Set_Cursor+1
  2504  051B  083C               	movf	??_Lcd_Set_Cursor+1,w
  2505  051C  00BE               	movwf	Lcd_Set_Cursor@z
  2506  051D                     l1477:
  2507                           
  2508                           ;./lcd.h: 56:   y = templcd & 0x0F;
  2509  051D  0840               	movf	Lcd_Set_Cursor@templcd,w
  2510  051E  390F               	andlw	15
  2511  051F  00BB               	movwf	??_Lcd_Set_Cursor
  2512  0520  083B               	movf	??_Lcd_Set_Cursor,w
  2513  0521  00BF               	movwf	Lcd_Set_Cursor@y
  2514  0522                     l1479:
  2515                           
  2516                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2517  0522  083E               	movf	Lcd_Set_Cursor@z,w
  2518  0523  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2519  0528                     l1481:
  2520                           
  2521                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2522  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2524  052A  083F               	movf	Lcd_Set_Cursor@y,w
  2525  052B  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2526  0530                     l87:
  2527  0530  0008               	return
  2528  0531                     __end_of_Lcd_Set_Cursor:
  2529                           
  2530                           	psect	text9
  2531  0F66                     __ptext9:	
  2532 ;; *************** function _Lcd_Clear *****************
  2533 ;; Defined at:
  2534 ;;		line 35 in file "./lcd.h"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 7
  2555 ;; This function calls:
  2556 ;;		_Lcd_Cmd
  2557 ;; This function is called by:
  2558 ;;		_mostra_timer
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _Lcd_Clear
  2565  0F66                     _Lcd_Clear:
  2566  0F66                     l1461:	
  2567                           ;incstack = 0
  2568 ;; hardware stack exceeded
  2569                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2570                           
  2571                           
  2572                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2573  0F66  3000               	movlw	0
  2574  0F67  120A  158A  278D  120A  158A  	fcall	_Lcd_Cmd
  2575                           
  2576                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2577  0F6C  3001               	movlw	1
  2578  0F6D  120A  158A  278D  120A  158A  	fcall	_Lcd_Cmd
  2579  0F72                     l81:
  2580  0F72  0008               	return
  2581  0F73                     __end_of_Lcd_Clear:
  2582                           
  2583                           	psect	text10
  2584  0476                     __ptext10:	
  2585 ;; *************** function _Lcd_Init *****************
  2586 ;; Defined at:
  2587 ;;		line 62 in file "./lcd.h"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       2       0       0       0
  2604 ;;      Totals:         0       2       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 7
  2608 ;; This function calls:
  2609 ;;		_Lcd_Cmd
  2610 ;;		_Lcd_Port
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _Lcd_Init
  2618  0476                     _Lcd_Init:
  2619  0476                     l1745:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2622                           
  2623                           
  2624                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2625  0476  3000               	movlw	0
  2626  0477  120A  158A  27A9  120A  118A  	fcall	_Lcd_Port
  2627  047C                     l1747:
  2628                           
  2629                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2630  047C  301A               	movlw	26
  2631  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2632  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2633  047F  00BB               	movwf	??_Lcd_Init+1
  2634  0480  30F7               	movlw	247
  2635  0481  00BA               	movwf	??_Lcd_Init
  2636  0482                     u2027:
  2637  0482  0BBA               	decfsz	??_Lcd_Init,f
  2638  0483  2C82               	goto	u2027
  2639  0484  0BBB               	decfsz	??_Lcd_Init+1,f
  2640  0485  2C82               	goto	u2027
  2641  0486  2C87               	nop2
  2642  0487                     l1749:
  2643                           
  2644                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2645  0487  3003               	movlw	3
  2646  0488  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2647                           
  2648                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2649  048D  3007               	movlw	7
  2650  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2651  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0490  00BB               	movwf	??_Lcd_Init+1
  2653  0491  307C               	movlw	124
  2654  0492  00BA               	movwf	??_Lcd_Init
  2655  0493                     u2037:
  2656  0493  0BBA               	decfsz	??_Lcd_Init,f
  2657  0494  2C93               	goto	u2037
  2658  0495  0BBB               	decfsz	??_Lcd_Init+1,f
  2659  0496  2C93               	goto	u2037
  2660  0497  0000               	nop
  2661  0498                     l1751:
  2662                           
  2663                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2664  0498  3003               	movlw	3
  2665  0499  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2666  049E                     l1753:
  2667                           
  2668                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2669  049E  300F               	movlw	15
  2670  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2671  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2672  04A1  00BB               	movwf	??_Lcd_Init+1
  2673  04A2  3047               	movlw	71
  2674  04A3  00BA               	movwf	??_Lcd_Init
  2675  04A4                     u2047:
  2676  04A4  0BBA               	decfsz	??_Lcd_Init,f
  2677  04A5  2CA4               	goto	u2047
  2678  04A6  0BBB               	decfsz	??_Lcd_Init+1,f
  2679  04A7  2CA4               	goto	u2047
  2680                           
  2681                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2682  04A8  3003               	movlw	3
  2683  04A9  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2684                           
  2685                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2686  04AE  3002               	movlw	2
  2687  04AF  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2688                           
  2689                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2690  04B4  3002               	movlw	2
  2691  04B5  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2692                           
  2693                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2694  04BA  3008               	movlw	8
  2695  04BB  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2696                           
  2697                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2698  04C0  3000               	movlw	0
  2699  04C1  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2700                           
  2701                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2702  04C6  300C               	movlw	12
  2703  04C7  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2704                           
  2705                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2706  04CC  3000               	movlw	0
  2707  04CD  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2708                           
  2709                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2710  04D2  3006               	movlw	6
  2711  04D3  120A  158A  278D  120A  118A  	fcall	_Lcd_Cmd
  2712  04D8                     l90:
  2713  04D8  0008               	return
  2714  04D9                     __end_of_Lcd_Init:
  2715                           
  2716                           	psect	text11
  2717  0F8D                     __ptext11:	
  2718 ;; *************** function _Lcd_Cmd *****************
  2719 ;; Defined at:
  2720 ;;		line 26 in file "./lcd.h"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  a               1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  a               1   25[BANK0 ] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       0       0       0       0
  2735 ;;      Locals:         0       1       0       0       0
  2736 ;;      Temps:          0       2       0       0       0
  2737 ;;      Totals:         0       3       0       0       0
  2738 ;;Total ram usage:        3 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 6
  2741 ;; This function calls:
  2742 ;;		_Lcd_Port
  2743 ;; This function is called by:
  2744 ;;		_Lcd_Clear
  2745 ;;		_Lcd_Set_Cursor
  2746 ;;		_Lcd_Init
  2747 ;;		_Lcd_Shift_Right
  2748 ;;		_Lcd_Shift_Left
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _Lcd_Cmd
  2754  0F8D                     _Lcd_Cmd:
  2755                           
  2756                           ;incstack = 0
  2757 ;; hardware stack exceeded
  2758                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2759                           ;Lcd_Cmd@a stored from wreg
  2760  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0F8F  00B9               	movwf	Lcd_Cmd@a
  2763  0F90                     l1373:
  2764                           
  2765                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  2766  0F90  1108               	bcf	8,2	;volatile
  2767  0F91                     l1375:
  2768                           
  2769                           ;./lcd.h: 29:  Lcd_Port(a);
  2770  0F91  0839               	movf	Lcd_Cmd@a,w
  2771  0F92  120A  158A  27A9  120A  158A  	fcall	_Lcd_Port
  2772  0F97                     l1377:
  2773                           
  2774                           ;./lcd.h: 30:  RD3 = 1;
  2775  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0F99  1588               	bsf	8,3	;volatile
  2778  0F9A                     l1379:
  2779                           
  2780                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2781  0F9A  3006               	movlw	6
  2782  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0F9D  00B8               	movwf	??_Lcd_Cmd+1
  2785  0F9E  302F               	movlw	47
  2786  0F9F  00B7               	movwf	??_Lcd_Cmd
  2787  0FA0                     u2057:
  2788  0FA0  0BB7               	decfsz	??_Lcd_Cmd,f
  2789  0FA1  2FA0               	goto	u2057
  2790  0FA2  0BB8               	decfsz	??_Lcd_Cmd+1,f
  2791  0FA3  2FA0               	goto	u2057
  2792  0FA4  2FA5               	nop2
  2793  0FA5                     l1381:
  2794                           
  2795                           ;./lcd.h: 32:         RD3 = 0;
  2796  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0FA7  1188               	bcf	8,3	;volatile
  2799  0FA8                     l78:
  2800  0FA8  0008               	return
  2801  0FA9                     __end_of_Lcd_Cmd:
  2802                           
  2803                           	psect	text12
  2804  0FA9                     __ptext12:	
  2805 ;; *************** function _Lcd_Port *****************
  2806 ;; Defined at:
  2807 ;;		line 4 in file "./lcd.h"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  a               1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  a               1   22[BANK0 ] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       1       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       1       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 5
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_Lcd_Cmd
  2832 ;;		_Lcd_Init
  2833 ;;		_Lcd_Write_Char
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _Lcd_Port
  2839  0FA9                     _Lcd_Port:
  2840                           
  2841                           ;incstack = 0
  2842 ;; hardware stack exceeded
  2843                           ; Regs used in _Lcd_Port: [wreg]
  2844                           ;Lcd_Port@a stored from wreg
  2845  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0FAB  00B6               	movwf	Lcd_Port@a
  2848  0FAC                     l1363:
  2849                           
  2850                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  2851  0FAC  1C36               	btfss	Lcd_Port@a,0
  2852  0FAD  2FAF               	goto	u831
  2853  0FAE  2FB0               	goto	u830
  2854  0FAF                     u831:
  2855  0FAF  2FB2               	goto	l67
  2856  0FB0                     u830:
  2857  0FB0                     l1365:
  2858                           
  2859                           ;./lcd.h: 7:   RD4 = 1;
  2860  0FB0  1608               	bsf	8,4	;volatile
  2861  0FB1  2FB3               	goto	l68
  2862  0FB2                     l67:	
  2863                           ;./lcd.h: 8:  else
  2864                           
  2865                           
  2866                           ;./lcd.h: 9:   RD4 = 0;
  2867  0FB2  1208               	bcf	8,4	;volatile
  2868  0FB3                     l68:
  2869                           
  2870                           ;./lcd.h: 11:  if(a & 2)
  2871  0FB3  1CB6               	btfss	Lcd_Port@a,1
  2872  0FB4  2FB6               	goto	u841
  2873  0FB5  2FB7               	goto	u840
  2874  0FB6                     u841:
  2875  0FB6  2FB9               	goto	l69
  2876  0FB7                     u840:
  2877  0FB7                     l1367:
  2878                           
  2879                           ;./lcd.h: 12:   RD5 = 1;
  2880  0FB7  1688               	bsf	8,5	;volatile
  2881  0FB8  2FBA               	goto	l70
  2882  0FB9                     l69:	
  2883                           ;./lcd.h: 13:  else
  2884                           
  2885                           
  2886                           ;./lcd.h: 14:   RD5 = 0;
  2887  0FB9  1288               	bcf	8,5	;volatile
  2888  0FBA                     l70:
  2889                           
  2890                           ;./lcd.h: 16:  if(a & 4)
  2891  0FBA  1D36               	btfss	Lcd_Port@a,2
  2892  0FBB  2FBD               	goto	u851
  2893  0FBC  2FBE               	goto	u850
  2894  0FBD                     u851:
  2895  0FBD  2FC0               	goto	l71
  2896  0FBE                     u850:
  2897  0FBE                     l1369:
  2898                           
  2899                           ;./lcd.h: 17:   RD6 = 1;
  2900  0FBE  1708               	bsf	8,6	;volatile
  2901  0FBF  2FC1               	goto	l72
  2902  0FC0                     l71:	
  2903                           ;./lcd.h: 18:  else
  2904                           
  2905                           
  2906                           ;./lcd.h: 19:   RD6 = 0;
  2907  0FC0  1308               	bcf	8,6	;volatile
  2908  0FC1                     l72:
  2909                           
  2910                           ;./lcd.h: 21:  if(a & 8)
  2911  0FC1  1DB6               	btfss	Lcd_Port@a,3
  2912  0FC2  2FC4               	goto	u861
  2913  0FC3  2FC5               	goto	u860
  2914  0FC4                     u861:
  2915  0FC4  2FC7               	goto	l73
  2916  0FC5                     u860:
  2917  0FC5                     l1371:
  2918                           
  2919                           ;./lcd.h: 22:   RD7 = 1;
  2920  0FC5  1788               	bsf	8,7	;volatile
  2921  0FC6  2FC8               	goto	l75
  2922  0FC7                     l73:	
  2923                           ;./lcd.h: 23:  else
  2924                           
  2925                           
  2926                           ;./lcd.h: 24:   RD7 = 0;
  2927  0FC7  1388               	bcf	8,7	;volatile
  2928  0FC8                     l75:
  2929  0FC8  0008               	return
  2930  0FC9                     __end_of_Lcd_Port:
  2931                           
  2932                           	psect	text13
  2933  03FE                     __ptext13:	
  2934 ;; *************** function _INTR *****************
  2935 ;; Defined at:
  2936 ;;		line 76 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          0       6       0       0       0
  2953 ;;      Totals:         0       6       0       0       0
  2954 ;;Total ram usage:        6 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 4
  2957 ;; This function calls:
  2958 ;;		i1_Lcd_Set_Cursor
  2959 ;;		i1_Lcd_Write_String
  2960 ;;		i1_mostra_timer
  2961 ;; This function is called by:
  2962 ;;		Interrupt level 1
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _INTR
  2968  03FE                     _INTR:
  2969  03FE                     i1l1801:
  2970                           
  2971                           ;main.c: 77:     if(INTF)
  2972  03FE  1C8B               	btfss	11,1	;volatile
  2973  03FF  2C01               	goto	u158_21
  2974  0400  2C02               	goto	u158_20
  2975  0401                     u158_21:
  2976  0401  2C17               	goto	i1l1809
  2977  0402                     u158_20:
  2978  0402                     i1l1803:
  2979                           
  2980                           ;main.c: 78:     {;main.c: 79:         INTF = 0;
  2981  0402  108B               	bcf	11,1	;volatile
  2982                           
  2983                           ;main.c: 80:         PORTBbits.RB7 = 1;
  2984  0403  1786               	bsf	6,7	;volatile
  2985                           
  2986                           ;main.c: 81:         PORTBbits.RB6 = 0;
  2987  0404  1306               	bcf	6,6	;volatile
  2988                           
  2989                           ;main.c: 82:         PORTCbits.RC1 = 0;
  2990  0405  1087               	bcf	7,1	;volatile
  2991  0406                     i1l1805:
  2992                           
  2993                           ;main.c: 83:         Lcd_Set_Cursor(1, 1);
  2994  0406  01F4               	clrf	i1Lcd_Set_Cursor@b
  2995  0407  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2996  0408  3001               	movlw	1
  2997  0409  120A  118A  2531  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2998  040E                     i1l1807:
  2999                           
  3000                           ;main.c: 84:         Lcd_Write_String("EMERGENCIA!");
  3001  040E  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3002  040F  00F5               	movwf	i1Lcd_Write_String@a
  3003  0410  3080               	movlw	128
  3004  0411  00F6               	movwf	i1Lcd_Write_String@a+1
  3005  0412  120A  118A  26E3  120A  118A  	fcall	i1_Lcd_Write_String
  3006  0417                     i1l1809:
  3007                           
  3008                           ;main.c: 87:       if (TMR1IF)
  3009  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0419  1C0C               	btfss	12,0	;volatile
  3012  041A  2C1C               	goto	u159_21
  3013  041B  2C1D               	goto	u159_20
  3014  041C                     u159_21:
  3015  041C  2C69               	goto	i1l122
  3016  041D                     u159_20:
  3017  041D                     i1l1811:
  3018                           
  3019                           ;main.c: 88:      {;main.c: 89:         PIR1bits.TMR1IF = 0;
  3020  041D  100C               	bcf	12,0	;volatile
  3021  041E                     i1l1813:
  3022                           
  3023                           ;main.c: 90:         TMR1L = 0xDC;
  3024  041E  30DC               	movlw	220
  3025  041F  008E               	movwf	14	;volatile
  3026                           
  3027                           ;main.c: 91:         TMR1H = 0x0B;
  3028  0420  300B               	movlw	11
  3029  0421  008F               	movwf	15	;volatile
  3030                           
  3031                           ;main.c: 94:         conta++;
  3032  0422  3001               	movlw	1
  3033  0423  07CC               	addwf	_conta,f
  3034  0424  1803               	skipnc
  3035  0425  0ACD               	incf	_conta+1,f
  3036  0426  3000               	movlw	0
  3037  0427  07CD               	addwf	_conta+1,f
  3038  0428                     i1l1815:
  3039                           
  3040                           ;main.c: 95:         if (conta==1){
  3041  0428  034C               	decf	_conta,w
  3042  0429  044D               	iorwf	_conta+1,w
  3043  042A  1D03               	btfss	3,2
  3044  042B  2C2D               	goto	u160_21
  3045  042C  2C2E               	goto	u160_20
  3046  042D                     u160_21:
  3047  042D  2C3B               	goto	i1l1823
  3048  042E                     u160_20:
  3049  042E                     i1l1817:
  3050                           
  3051                           ;main.c: 96:             contador_minutos--;
  3052  042E  30FF               	movlw	255
  3053  042F  07D0               	addwf	_contador_minutos,f
  3054  0430  1803               	skipnc
  3055  0431  0AD1               	incf	_contador_minutos+1,f
  3056  0432  30FF               	movlw	255
  3057  0433  07D1               	addwf	_contador_minutos+1,f
  3058  0434                     i1l1819:
  3059                           
  3060                           ;main.c: 97:             conta = 0;
  3061  0434  01CC               	clrf	_conta
  3062  0435  01CD               	clrf	_conta+1
  3063  0436                     i1l1821:
  3064                           
  3065                           ;main.c: 98:             mostra_timer();
  3066  0436  120A  118A  2382  120A  118A  	fcall	i1_mostra_timer
  3067  043B                     i1l1823:
  3068                           
  3069                           ;main.c: 101:         if(contador_minutos == 0 && contador_horas == 0){
  3070  043B  1283               	bcf	3,5	;RP0=0, select bank0
  3071  043C  1303               	bcf	3,6	;RP1=0, select bank0
  3072  043D  0850               	movf	_contador_minutos,w
  3073  043E  0451               	iorwf	_contador_minutos+1,w
  3074  043F  1D03               	btfss	3,2
  3075  0440  2C42               	goto	u161_21
  3076  0441  2C43               	goto	u161_20
  3077  0442                     u161_21:
  3078  0442  2C69               	goto	i1l122
  3079  0443                     u161_20:
  3080  0443                     i1l1825:
  3081  0443  084E               	movf	_contador_horas,w
  3082  0444  044F               	iorwf	_contador_horas+1,w
  3083  0445  1D03               	btfss	3,2
  3084  0446  2C48               	goto	u162_21
  3085  0447  2C49               	goto	u162_20
  3086  0448                     u162_21:
  3087  0448  2C69               	goto	i1l122
  3088  0449                     u162_20:
  3089  0449                     i1l1827:
  3090                           
  3091                           ;main.c: 102:             PORTCbits.RC1 = 0;
  3092  0449  1087               	bcf	7,1	;volatile
  3093  044A                     i1l1829:
  3094                           
  3095                           ;main.c: 103:              _delay((unsigned long)((50)*(4000000/4000.0)));
  3096  044A  3041               	movlw	65
  3097  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3098  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3099  044D  00B1               	movwf	??_INTR+1
  3100  044E  30ED               	movlw	237
  3101  044F  00B0               	movwf	??_INTR
  3102  0450                     u206_27:
  3103  0450  0BB0               	decfsz	??_INTR,f
  3104  0451  2C50               	goto	u206_27
  3105  0452  0BB1               	decfsz	??_INTR+1,f
  3106  0453  2C50               	goto	u206_27
  3107  0454  2C55               	nop2
  3108  0455                     i1l1831:
  3109                           
  3110                           ;main.c: 104:             PORTBbits.RB6 = 0;
  3111  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0457  1306               	bcf	6,6	;volatile
  3114  0458                     i1l1833:
  3115                           
  3116                           ;main.c: 105:             Lcd_Set_Cursor(1, 1);
  3117  0458  01F4               	clrf	i1Lcd_Set_Cursor@b
  3118  0459  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  3119  045A  3001               	movlw	1
  3120  045B  120A  118A  2531  120A  118A  	fcall	i1_Lcd_Set_Cursor
  3121  0460                     i1l1835:
  3122                           
  3123                           ;main.c: 106:             Lcd_Write_String("PRONTO P/ RETIRAR!");
  3124  0460  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3125  0461  00F5               	movwf	i1Lcd_Write_String@a
  3126  0462  3080               	movlw	128
  3127  0463  00F6               	movwf	i1Lcd_Write_String@a+1
  3128  0464  120A  118A  26E3  120A  118A  	fcall	i1_Lcd_Write_String
  3129  0469                     i1l122:
  3130  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3131  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3132  046B  0835               	movf	??_INTR+5,w
  3133  046C  00FF               	movwf	btemp+1
  3134  046D  0834               	movf	??_INTR+4,w
  3135  046E  008A               	movwf	10
  3136  046F  0833               	movf	??_INTR+3,w
  3137  0470  0084               	movwf	4
  3138  0471  0E32               	swapf	??_INTR+2,w
  3139  0472  0083               	movwf	3
  3140  0473  0EFE               	swapf	btemp,f
  3141  0474  0E7E               	swapf	btemp,w
  3142  0475  0009               	retfie
  3143  0476                     __end_of_INTR:
  3144                           
  3145                           	psect	intentry
  3146  0004                     __pintentry:	
  3147                           ;incstack = 0
  3148 ;; hardware stack exceeded
  3149                           ; Regs used in _INTR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3150                           
  3151  0004                     interrupt_function:
  3152  007E                     saved_w	set	btemp
  3153  0004  00FE               	movwf	btemp
  3154  0005  0E03               	swapf	3,w
  3155  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0008  00B2               	movwf	??_INTR+2
  3158  0009  0804               	movf	4,w
  3159  000A  00B3               	movwf	??_INTR+3
  3160  000B  080A               	movf	10,w
  3161  000C  00B4               	movwf	??_INTR+4
  3162  000D  087F               	movf	btemp+1,w
  3163  000E  00B5               	movwf	??_INTR+5
  3164  000F  120A  118A  2BFE   	ljmp	_INTR
  3165                           
  3166                           	psect	text14
  3167  0382                     __ptext14:	
  3168 ;; *************** function i1_mostra_timer *****************
  3169 ;; Defined at:
  3170 ;;		line 53 in file "main.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0
  3186 ;;      Temps:          0       1       0       0       0
  3187 ;;      Totals:         0       1       0       0       0
  3188 ;;Total ram usage:        1 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 3
  3191 ;; This function calls:
  3192 ;;		i1_Lcd_Clear
  3193 ;;		i1_Lcd_Set_Cursor
  3194 ;;		i1_Lcd_Write_String
  3195 ;;		i1_sprintf
  3196 ;; This function is called by:
  3197 ;;		_INTR
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function i1_mostra_timer
  3203  0382                     i1_mostra_timer:
  3204  0382                     i1l1775:	
  3205                           ;incstack = 0
  3206 ;; hardware stack exceeded
  3207                           ; Regs used in i1_mostra_timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3208                           
  3209                           
  3210                           ;main.c: 54:     if(contador_minutos>=60){
  3211  0382  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0383  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0384  0851               	movf	_contador_minutos+1,w
  3214  0385  3A80               	xorlw	128
  3215  0386  00FF               	movwf	btemp+1
  3216  0387  3080               	movlw	128
  3217  0388  027F               	subwf	btemp+1,w
  3218  0389  1D03               	skipz
  3219  038A  2B8D               	goto	u155_25
  3220  038B  303C               	movlw	60
  3221  038C  0250               	subwf	_contador_minutos,w
  3222  038D                     u155_25:
  3223  038D  1C03               	skipc
  3224  038E  2B90               	goto	u155_21
  3225  038F  2B91               	goto	u155_20
  3226  0390                     u155_21:
  3227  0390  2BA2               	goto	i1l1781
  3228  0391                     u155_20:
  3229  0391                     i1l1777:
  3230                           
  3231                           ;main.c: 55:         contador_minutos = contador_minutos - 60;
  3232  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0393  0850               	movf	_contador_minutos,w
  3235  0394  3EC4               	addlw	196
  3236  0395  00D0               	movwf	_contador_minutos
  3237  0396  0851               	movf	_contador_minutos+1,w
  3238  0397  1803               	skipnc
  3239  0398  3E01               	addlw	1
  3240  0399  3EFF               	addlw	255
  3241  039A  00D1               	movwf	_contador_minutos+1
  3242  039B                     i1l1779:
  3243                           
  3244                           ;main.c: 56:         contador_horas++;
  3245  039B  3001               	movlw	1
  3246  039C  07CE               	addwf	_contador_horas,f
  3247  039D  1803               	skipnc
  3248  039E  0ACF               	incf	_contador_horas+1,f
  3249  039F  3000               	movlw	0
  3250  03A0  07CF               	addwf	_contador_horas+1,f
  3251                           
  3252                           ;main.c: 57:     }else{
  3253  03A1  2BD3               	goto	i1l1789
  3254  03A2                     i1l1781:
  3255                           
  3256                           ;main.c: 58:         if(contador_minutos <= 0){
  3257  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3258  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3259  03A4  0851               	movf	_contador_minutos+1,w
  3260  03A5  3A80               	xorlw	128
  3261  03A6  00FF               	movwf	btemp+1
  3262  03A7  3080               	movlw	128
  3263  03A8  027F               	subwf	btemp+1,w
  3264  03A9  1D03               	skipz
  3265  03AA  2BAD               	goto	u156_25
  3266  03AB  3001               	movlw	1
  3267  03AC  0250               	subwf	_contador_minutos,w
  3268  03AD                     u156_25:
  3269  03AD  1803               	skipnc
  3270  03AE  2BB0               	goto	u156_21
  3271  03AF  2BB1               	goto	u156_20
  3272  03B0                     u156_21:
  3273  03B0  2BD3               	goto	i1l1789
  3274  03B1                     u156_20:
  3275  03B1                     i1l1783:
  3276                           
  3277                           ;main.c: 59:             if(contador_horas <= 0){
  3278  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3279  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3280  03B3  084F               	movf	_contador_horas+1,w
  3281  03B4  3A80               	xorlw	128
  3282  03B5  00FF               	movwf	btemp+1
  3283  03B6  3080               	movlw	128
  3284  03B7  027F               	subwf	btemp+1,w
  3285  03B8  1D03               	skipz
  3286  03B9  2BBC               	goto	u157_25
  3287  03BA  3001               	movlw	1
  3288  03BB  024E               	subwf	_contador_horas,w
  3289  03BC                     u157_25:
  3290  03BC  1803               	skipnc
  3291  03BD  2BBF               	goto	u157_21
  3292  03BE  2BC0               	goto	u157_20
  3293  03BF                     u157_21:
  3294  03BF  2BC7               	goto	i1l1787
  3295  03C0                     u157_20:
  3296  03C0                     i1l1785:
  3297                           
  3298                           ;main.c: 60:                 contador_minutos = 0;
  3299  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3300  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3301  03C2  01D0               	clrf	_contador_minutos
  3302  03C3  01D1               	clrf	_contador_minutos+1
  3303                           
  3304                           ;main.c: 61:                 contador_horas = 0;
  3305  03C4  01CE               	clrf	_contador_horas
  3306  03C5  01CF               	clrf	_contador_horas+1
  3307                           
  3308                           ;main.c: 62:             }else{
  3309  03C6  2BD3               	goto	i1l1789
  3310  03C7                     i1l1787:
  3311                           
  3312                           ;main.c: 63:                 contador_horas--;
  3313  03C7  30FF               	movlw	255
  3314  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3315  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3316  03CA  07CE               	addwf	_contador_horas,f
  3317  03CB  1803               	skipnc
  3318  03CC  0ACF               	incf	_contador_horas+1,f
  3319  03CD  30FF               	movlw	255
  3320  03CE  07CF               	addwf	_contador_horas+1,f
  3321                           
  3322                           ;main.c: 64:                 contador_minutos = 59;
  3323  03CF  303B               	movlw	59
  3324  03D0  00D0               	movwf	_contador_minutos
  3325  03D1  3000               	movlw	0
  3326  03D2  00D1               	movwf	_contador_minutos+1
  3327  03D3                     i1l1789:
  3328                           
  3329                           ;main.c: 69:     Lcd_Clear();
  3330  03D3  120A  158A  2759  120A  118A  	fcall	i1_Lcd_Clear
  3331  03D8                     i1l1791:
  3332                           
  3333                           ;main.c: 70:     Lcd_Set_Cursor(1, 1);
  3334  03D8  01F4               	clrf	i1Lcd_Set_Cursor@b
  3335  03D9  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  3336  03DA  3001               	movlw	1
  3337  03DB  120A  118A  2531  120A  118A  	fcall	i1_Lcd_Set_Cursor
  3338  03E0                     i1l1793:
  3339                           
  3340                           ;main.c: 71:     sprintf(timer, "%d:%d", contador_horas, contador_minutos);
  3341  03E0  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3342  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3343  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3344  03E3  00AF               	movwf	??i1_mostra_timer
  3345  03E4  082F               	movf	??i1_mostra_timer,w
  3346  03E5  00A0               	movwf	i1sprintf@f
  3347  03E6  084F               	movf	_contador_horas+1,w
  3348  03E7  00A2               	movwf	?i1_sprintf+2
  3349  03E8  084E               	movf	_contador_horas,w
  3350  03E9  00A1               	movwf	?i1_sprintf+1
  3351  03EA  0851               	movf	_contador_minutos+1,w
  3352  03EB  00A4               	movwf	?i1_sprintf+4
  3353  03EC  0850               	movf	_contador_minutos,w
  3354  03ED  00A3               	movwf	?i1_sprintf+3
  3355  03EE  3054               	movlw	(low (_timer| 0))& (0+255)
  3356  03EF  120A  118A  2168  120A  118A  	fcall	i1_sprintf
  3357  03F4                     i1l1795:
  3358                           
  3359                           ;main.c: 72:     Lcd_Write_String(timer);
  3360  03F4  3054               	movlw	(low (_timer| 0))& (0+255)
  3361  03F5  00F5               	movwf	i1Lcd_Write_String@a
  3362  03F6  3000               	movlw	0
  3363  03F7  00F6               	movwf	i1Lcd_Write_String@a+1
  3364  03F8  120A  118A  26E3  120A  118A  	fcall	i1_Lcd_Write_String
  3365  03FD                     i1l113:
  3366  03FD  0008               	return
  3367  03FE                     __end_ofi1_mostra_timer:
  3368                           
  3369                           	psect	text15
  3370  0168                     __ptext15:	
  3371 ;; *************** function i1_sprintf *****************
  3372 ;; Defined at:
  3373 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  sp              1    wreg     PTR unsigned char 
  3376 ;;		 -> timer(6), 
  3377 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3378 ;;		 -> STR_1(6), 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  3381 ;;		 -> timer(6), 
  3382 ;;  tmpval          4    0        struct .
  3383 ;;  val             2   11[BANK0 ] unsigned int 
  3384 ;;  cp              2    0        PTR const unsigned char 
  3385 ;;  len             2    0        unsigned int 
  3386 ;;  c               1   14[BANK0 ] unsigned char 
  3387 ;;  prec            1   10[BANK0 ] char 
  3388 ;;  flag            1    9[BANK0 ] unsigned char 
  3389 ;;  ap              1    8[BANK0 ] PTR void [1]
  3390 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  2    0[BANK0 ] int 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       5       0       0       0
  3401 ;;      Locals:         0       7       0       0       0
  3402 ;;      Temps:          0       3       0       0       0
  3403 ;;      Totals:         0      15       0       0       0
  3404 ;;Total ram usage:       15 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 1
  3407 ;; This function calls:
  3408 ;;		i1___lwdiv
  3409 ;;		i1___lwmod
  3410 ;; This function is called by:
  3411 ;;		i1_mostra_timer
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function i1_sprintf
  3417  0168                     i1_sprintf:
  3418                           
  3419                           ;incstack = 0
  3420 ;; hardware stack exceeded
  3421                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3422                           ;i1sprintf@sp stored from wreg
  3423  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0169  1303               	bcf	3,6	;RP1=0, select bank0
  3425  016A  00AD               	movwf	i1sprintf@sp
  3426  016B                     i1l1683:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3429  016B  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  3430  016C  00A5               	movwf	??i1_sprintf
  3431  016D  0825               	movf	??i1_sprintf,w
  3432  016E  00A8               	movwf	i1sprintf@ap
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3435  016F  2A39               	goto	i1l1735
  3436  0170                     i1l1685:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3439  0170  3025               	movlw	37
  3440  0171  062E               	xorwf	i1sprintf@c,w
  3441  0172  1903               	btfsc	3,2
  3442  0173  2975               	goto	u143_21
  3443  0174  2976               	goto	u143_20
  3444  0175                     u143_21:
  3445  0175  2982               	goto	i1l1691
  3446  0176                     u143_20:
  3447  0176                     i1l1687:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3450  0176  082E               	movf	i1sprintf@c,w
  3451  0177  00A5               	movwf	??i1_sprintf
  3452  0178  082D               	movf	i1sprintf@sp,w
  3453  0179  0084               	movwf	4
  3454  017A  0825               	movf	??i1_sprintf,w
  3455  017B  1383               	bcf	3,7	;select IRP bank0
  3456  017C  0080               	movwf	0
  3457  017D                     i1l1689:
  3458  017D  3001               	movlw	1
  3459  017E  00A5               	movwf	??i1_sprintf
  3460  017F  0825               	movf	??i1_sprintf,w
  3461  0180  07AD               	addwf	i1sprintf@sp,f
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  3464  0181  2A39               	goto	i1l1735
  3465  0182                     i1l1691:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3468  0182  01A9               	clrf	i1sprintf@flag
  3469  0183                     i1l1695:	
  3470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3471                           
  3472  0183  3001               	movlw	1
  3473  0184  07A0               	addwf	i1sprintf@f,f
  3474  0185  30FF               	movlw	-1
  3475  0186  0720               	addwf	i1sprintf@f,w
  3476  0187  0084               	movwf	4
  3477  0188  120A  118A  2664  120A  118A  	fcall	stringdir
  3478  018D  00AE               	movwf	i1sprintf@c
  3479  018E  00A5               	movwf	??i1_sprintf
  3480  018F  01A6               	clrf	??i1_sprintf+1
  3481                           
  3482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3483                           ; Switch size 1, requested type "simple"
  3484                           ; Number of cases is 1, Range of values is 0 to 0
  3485                           ; switch strategies available:
  3486                           ; Name         Instructions Cycles
  3487                           ; simple_byte            4     3 (average)
  3488                           ; direct_byte           11     8 (fixed)
  3489                           ; jumptable            260     6 (fixed)
  3490                           ;	Chosen strategy is simple_byte
  3491  0190  0826               	movf	??i1_sprintf+1,w
  3492  0191  3A00               	xorlw	0	; case 0
  3493  0192  1903               	skipnz
  3494  0193  2995               	goto	i1l2237
  3495  0194  2A39               	goto	i1l1735
  3496  0195                     i1l2237:
  3497                           
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 3, Range of values is 0 to 105
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte           10     6 (average)
  3503                           ; jumptable            260     6 (fixed)
  3504                           ;	Chosen strategy is simple_byte
  3505  0195  0825               	movf	??i1_sprintf,w
  3506  0196  3A00               	xorlw	0	; case 0
  3507  0197  1903               	skipnz
  3508  0198  2A4B               	goto	i1l1737
  3509  0199  3A64               	xorlw	100	; case 100
  3510  019A  1903               	skipnz
  3511  019B  29A0               	goto	i1l1697
  3512  019C  3A0D               	xorlw	13	; case 105
  3513  019D  1903               	skipnz
  3514  019E  29A0               	goto	i1l1697
  3515  019F  2A39               	goto	i1l1735
  3516  01A0                     i1l1697:
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3519  01A0  0828               	movf	i1sprintf@ap,w
  3520  01A1  0084               	movwf	4
  3521  01A2  1383               	bcf	3,7	;select IRP bank0
  3522  01A3  0800               	movf	0,w
  3523  01A4  00AB               	movwf	i1sprintf@val
  3524  01A5  0A84               	incf	4,f
  3525  01A6  0800               	movf	0,w
  3526  01A7  00AC               	movwf	i1sprintf@val+1
  3527  01A8                     i1l1699:
  3528  01A8  3002               	movlw	2
  3529  01A9  00A5               	movwf	??i1_sprintf
  3530  01AA  0825               	movf	??i1_sprintf,w
  3531  01AB  07A8               	addwf	i1sprintf@ap,f
  3532  01AC                     i1l1701:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3535  01AC  1FAC               	btfss	i1sprintf@val+1,7
  3536  01AD  29AF               	goto	u144_21
  3537  01AE  29B0               	goto	u144_20
  3538  01AF                     u144_21:
  3539  01AF  29B9               	goto	i1l1707
  3540  01B0                     u144_20:
  3541  01B0                     i1l1703:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3544  01B0  3003               	movlw	3
  3545  01B1  00A5               	movwf	??i1_sprintf
  3546  01B2  0825               	movf	??i1_sprintf,w
  3547  01B3  04A9               	iorwf	i1sprintf@flag,f
  3548  01B4                     i1l1705:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3551  01B4  09AB               	comf	i1sprintf@val,f
  3552  01B5  09AC               	comf	i1sprintf@val+1,f
  3553  01B6  0AAB               	incf	i1sprintf@val,f
  3554  01B7  1903               	skipnz
  3555  01B8  0AAC               	incf	i1sprintf@val+1,f
  3556  01B9                     i1l1707:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3559  01B9  01AE               	clrf	i1sprintf@c
  3560  01BA  0AAE               	incf	i1sprintf@c,f
  3561  01BB                     i1l1713:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3564  01BB  082E               	movf	i1sprintf@c,w
  3565  01BC  00A5               	movwf	??i1_sprintf
  3566  01BD  0725               	addwf	??i1_sprintf,w
  3567  01BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3568  01BF  0084               	movwf	4
  3569  01C0  120A  118A  2664  120A  118A  	fcall	stringdir
  3570  01C5  00A6               	movwf	??i1_sprintf+1
  3571  01C6  120A  118A  2664  120A  118A  	fcall	stringdir
  3572  01CB  00A7               	movwf	??i1_sprintf+2
  3573  01CC  0827               	movf	??i1_sprintf+2,w
  3574  01CD  022C               	subwf	i1sprintf@val+1,w
  3575  01CE  1D03               	skipz
  3576  01CF  29D2               	goto	u145_25
  3577  01D0  0826               	movf	??i1_sprintf+1,w
  3578  01D1  022B               	subwf	i1sprintf@val,w
  3579  01D2                     u145_25:
  3580  01D2  1803               	skipnc
  3581  01D3  29D5               	goto	u145_21
  3582  01D4  29D6               	goto	u145_20
  3583  01D5                     u145_21:
  3584  01D5  29D7               	goto	i1l1717
  3585  01D6                     u145_20:
  3586  01D6  29E1               	goto	i1l1719
  3587  01D7                     i1l1717:
  3588  01D7  3001               	movlw	1
  3589  01D8  00A5               	movwf	??i1_sprintf
  3590  01D9  0825               	movf	??i1_sprintf,w
  3591  01DA  07AE               	addwf	i1sprintf@c,f
  3592  01DB  3005               	movlw	5
  3593  01DC  062E               	xorwf	i1sprintf@c,w
  3594  01DD  1D03               	btfss	3,2
  3595  01DE  29E0               	goto	u146_21
  3596  01DF  29E1               	goto	u146_20
  3597  01E0                     u146_21:
  3598  01E0  29BB               	goto	i1l1713
  3599  01E1                     u146_20:
  3600  01E1                     i1l1719:
  3601                           
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3603  01E1  0829               	movf	i1sprintf@flag,w
  3604  01E2  3903               	andlw	3
  3605  01E3  1903               	btfsc	3,2
  3606  01E4  29E6               	goto	u147_21
  3607  01E5  29E7               	goto	u147_20
  3608  01E6                     u147_21:
  3609  01E6  29F2               	goto	i1l1725
  3610  01E7                     u147_20:
  3611  01E7                     i1l1721:
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3614  01E7  302D               	movlw	45
  3615  01E8  00A5               	movwf	??i1_sprintf
  3616  01E9  082D               	movf	i1sprintf@sp,w
  3617  01EA  0084               	movwf	4
  3618  01EB  0825               	movf	??i1_sprintf,w
  3619  01EC  1383               	bcf	3,7	;select IRP bank0
  3620  01ED  0080               	movwf	0
  3621  01EE                     i1l1723:
  3622  01EE  3001               	movlw	1
  3623  01EF  00A5               	movwf	??i1_sprintf
  3624  01F0  0825               	movf	??i1_sprintf,w
  3625  01F1  07AD               	addwf	i1sprintf@sp,f
  3626  01F2                     i1l1725:
  3627                           
  3628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3629  01F2  082E               	movf	i1sprintf@c,w
  3630  01F3  00A5               	movwf	??i1_sprintf
  3631  01F4  0825               	movf	??i1_sprintf,w
  3632  01F5  00AA               	movwf	i1sprintf@prec
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3635  01F6  2A30               	goto	i1l1733
  3636  01F7                     i1l1727:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3639  01F7  300A               	movlw	10
  3640  01F8  00F8               	movwf	i1___lwmod@divisor
  3641  01F9  3000               	movlw	0
  3642  01FA  00F9               	movwf	i1___lwmod@divisor+1
  3643  01FB  082A               	movf	i1sprintf@prec,w
  3644  01FC  00A5               	movwf	??i1_sprintf
  3645  01FD  0725               	addwf	??i1_sprintf,w
  3646  01FE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3647  01FF  0084               	movwf	4
  3648  0200  120A  118A  2664  120A  118A  	fcall	stringdir
  3649  0205  00F0               	movwf	i1___lwdiv@divisor
  3650  0206  120A  118A  2664  120A  118A  	fcall	stringdir
  3651  020B  00F1               	movwf	i1___lwdiv@divisor+1
  3652  020C  082C               	movf	i1sprintf@val+1,w
  3653  020D  00F3               	movwf	i1___lwdiv@dividend+1
  3654  020E  082B               	movf	i1sprintf@val,w
  3655  020F  00F2               	movwf	i1___lwdiv@dividend
  3656  0210  120A  118A  269F  120A  118A  	fcall	i1___lwdiv
  3657  0215  0871               	movf	?i1___lwdiv+1,w
  3658  0216  00FB               	movwf	i1___lwmod@dividend+1
  3659  0217  0870               	movf	?i1___lwdiv,w
  3660  0218  00FA               	movwf	i1___lwmod@dividend
  3661  0219  120A  118A  279E  120A  118A  	fcall	i1___lwmod
  3662  021E  0878               	movf	?i1___lwmod,w
  3663  021F  3E30               	addlw	48
  3664  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0222  00A6               	movwf	??i1_sprintf+1
  3667  0223  0826               	movf	??i1_sprintf+1,w
  3668  0224  00AE               	movwf	i1sprintf@c
  3669  0225                     i1l1729:
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3672  0225  082E               	movf	i1sprintf@c,w
  3673  0226  00A5               	movwf	??i1_sprintf
  3674  0227  082D               	movf	i1sprintf@sp,w
  3675  0228  0084               	movwf	4
  3676  0229  0825               	movf	??i1_sprintf,w
  3677  022A  1383               	bcf	3,7	;select IRP bank0
  3678  022B  0080               	movwf	0
  3679  022C                     i1l1731:
  3680  022C  3001               	movlw	1
  3681  022D  00A5               	movwf	??i1_sprintf
  3682  022E  0825               	movf	??i1_sprintf,w
  3683  022F  07AD               	addwf	i1sprintf@sp,f
  3684  0230                     i1l1733:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3687  0230  30FF               	movlw	255
  3688  0231  00A5               	movwf	??i1_sprintf
  3689  0232  0825               	movf	??i1_sprintf,w
  3690  0233  07AA               	addwf	i1sprintf@prec,f
  3691  0234  0A2A               	incf	i1sprintf@prec,w
  3692  0235  1D03               	btfss	3,2
  3693  0236  2A38               	goto	u148_21
  3694  0237  2A39               	goto	u148_20
  3695  0238                     u148_21:
  3696  0238  29F7               	goto	i1l1727
  3697  0239                     u148_20:
  3698  0239                     i1l1735:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3701  0239  3001               	movlw	1
  3702  023A  07A0               	addwf	i1sprintf@f,f
  3703  023B  30FF               	movlw	-1
  3704  023C  0720               	addwf	i1sprintf@f,w
  3705  023D  0084               	movwf	4
  3706  023E  120A  118A  2664  120A  118A  	fcall	stringdir
  3707  0243  00A5               	movwf	??i1_sprintf
  3708  0244  0825               	movf	??i1_sprintf,w
  3709  0245  00AE               	movwf	i1sprintf@c
  3710  0246  082E               	movf	i1sprintf@c,w
  3711  0247  1D03               	btfss	3,2
  3712  0248  2A4A               	goto	u149_21
  3713  0249  2A4B               	goto	u149_20
  3714  024A                     u149_21:
  3715  024A  2970               	goto	i1l1685
  3716  024B                     u149_20:
  3717  024B                     i1l1737:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3720  024B  082D               	movf	i1sprintf@sp,w
  3721  024C  0084               	movwf	4
  3722  024D  1383               	bcf	3,7	;select IRP bank0
  3723  024E  0180               	clrf	0
  3724  024F                     i1l255:
  3725  024F  0008               	return
  3726  0250                     __end_ofi1_sprintf:
  3727                           
  3728                           	psect	text16
  3729  079E                     __ptext16:	
  3730 ;; *************** function i1___lwmod *****************
  3731 ;; Defined at:
  3732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  divisor         2    8[COMMON] unsigned int 
  3735 ;;  dividend        2   10[COMMON] unsigned int 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  counter         1   13[COMMON] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    8[COMMON] unsigned int 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         4       0       0       0       0
  3748 ;;      Locals:         1       0       0       0       0
  3749 ;;      Temps:          1       0       0       0       0
  3750 ;;      Totals:         6       0       0       0       0
  3751 ;;Total ram usage:        6 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		i1_sprintf
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function i1___lwmod
  3762  079E                     i1___lwmod:
  3763  079E                     i1l1609:	
  3764                           ;incstack = 0
  3765 ;; hardware stack exceeded
  3766                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  3767                           
  3768  079E  0878               	movf	i1___lwmod@divisor,w
  3769  079F  0479               	iorwf	i1___lwmod@divisor+1,w
  3770  07A0  1903               	btfsc	3,2
  3771  07A1  2FA3               	goto	u127_21
  3772  07A2  2FA4               	goto	u127_20
  3773  07A3                     u127_21:
  3774  07A3  2FD3               	goto	i1l1627
  3775  07A4                     u127_20:
  3776  07A4                     i1l1611:
  3777  07A4  01FD               	clrf	i1___lwmod@counter
  3778  07A5  0AFD               	incf	i1___lwmod@counter,f
  3779  07A6  2FB2               	goto	i1l1617
  3780  07A7                     i1l1613:
  3781  07A7  3001               	movlw	1
  3782  07A8                     u128_25:
  3783  07A8  1003               	clrc
  3784  07A9  0DF8               	rlf	i1___lwmod@divisor,f
  3785  07AA  0DF9               	rlf	i1___lwmod@divisor+1,f
  3786  07AB  3EFF               	addlw	-1
  3787  07AC  1D03               	skipz
  3788  07AD  2FA8               	goto	u128_25
  3789  07AE                     i1l1615:
  3790  07AE  3001               	movlw	1
  3791  07AF  00FC               	movwf	??i1___lwmod
  3792  07B0  087C               	movf	??i1___lwmod,w
  3793  07B1  07FD               	addwf	i1___lwmod@counter,f
  3794  07B2                     i1l1617:
  3795  07B2  1FF9               	btfss	i1___lwmod@divisor+1,7
  3796  07B3  2FB5               	goto	u129_21
  3797  07B4  2FB6               	goto	u129_20
  3798  07B5                     u129_21:
  3799  07B5  2FA7               	goto	i1l1613
  3800  07B6                     u129_20:
  3801  07B6                     i1l1619:
  3802  07B6  0879               	movf	i1___lwmod@divisor+1,w
  3803  07B7  027B               	subwf	i1___lwmod@dividend+1,w
  3804  07B8  1D03               	skipz
  3805  07B9  2FBC               	goto	u130_25
  3806  07BA  0878               	movf	i1___lwmod@divisor,w
  3807  07BB  027A               	subwf	i1___lwmod@dividend,w
  3808  07BC                     u130_25:
  3809  07BC  1C03               	skipc
  3810  07BD  2FBF               	goto	u130_21
  3811  07BE  2FC0               	goto	u130_20
  3812  07BF                     u130_21:
  3813  07BF  2FC6               	goto	i1l1623
  3814  07C0                     u130_20:
  3815  07C0                     i1l1621:
  3816  07C0  0878               	movf	i1___lwmod@divisor,w
  3817  07C1  02FA               	subwf	i1___lwmod@dividend,f
  3818  07C2  0879               	movf	i1___lwmod@divisor+1,w
  3819  07C3  1C03               	skipc
  3820  07C4  03FB               	decf	i1___lwmod@dividend+1,f
  3821  07C5  02FB               	subwf	i1___lwmod@dividend+1,f
  3822  07C6                     i1l1623:
  3823  07C6  3001               	movlw	1
  3824  07C7                     u131_25:
  3825  07C7  1003               	clrc
  3826  07C8  0CF9               	rrf	i1___lwmod@divisor+1,f
  3827  07C9  0CF8               	rrf	i1___lwmod@divisor,f
  3828  07CA  3EFF               	addlw	-1
  3829  07CB  1D03               	skipz
  3830  07CC  2FC7               	goto	u131_25
  3831  07CD                     i1l1625:
  3832  07CD  3001               	movlw	1
  3833  07CE  02FD               	subwf	i1___lwmod@counter,f
  3834  07CF  1D03               	btfss	3,2
  3835  07D0  2FD2               	goto	u132_21
  3836  07D1  2FD3               	goto	u132_20
  3837  07D2                     u132_21:
  3838  07D2  2FB6               	goto	i1l1619
  3839  07D3                     u132_20:
  3840  07D3                     i1l1627:
  3841  07D3  087B               	movf	i1___lwmod@dividend+1,w
  3842  07D4  00F9               	movwf	?i1___lwmod+1
  3843  07D5  087A               	movf	i1___lwmod@dividend,w
  3844  07D6  00F8               	movwf	?i1___lwmod
  3845  07D7                     i1l541:
  3846  07D7  0008               	return
  3847  07D8                     __end_ofi1___lwmod:
  3848                           
  3849                           	psect	text17
  3850  069F                     __ptext17:	
  3851 ;; *************** function i1___lwdiv *****************
  3852 ;; Defined at:
  3853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  divisor         2    0[COMMON] unsigned int 
  3856 ;;  dividend        2    2[COMMON] unsigned int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  quotient        2    5[COMMON] unsigned int 
  3859 ;;  counter         1    7[COMMON] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2    0[COMMON] unsigned int 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         4       0       0       0       0
  3870 ;;      Locals:         3       0       0       0       0
  3871 ;;      Temps:          1       0       0       0       0
  3872 ;;      Totals:         8       0       0       0       0
  3873 ;;Total ram usage:        8 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		i1_sprintf
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function i1___lwdiv
  3884  069F                     i1___lwdiv:
  3885  069F                     i1l1583:	
  3886                           ;incstack = 0
  3887 ;; hardware stack exceeded
  3888                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  3889                           
  3890  069F  01F5               	clrf	i1___lwdiv@quotient
  3891  06A0  01F6               	clrf	i1___lwdiv@quotient+1
  3892  06A1                     i1l1585:
  3893  06A1  0870               	movf	i1___lwdiv@divisor,w
  3894  06A2  0471               	iorwf	i1___lwdiv@divisor+1,w
  3895  06A3  1903               	btfsc	3,2
  3896  06A4  2EA6               	goto	u120_21
  3897  06A5  2EA7               	goto	u120_20
  3898  06A6                     u120_21:
  3899  06A6  2EDE               	goto	i1l1605
  3900  06A7                     u120_20:
  3901  06A7                     i1l1587:
  3902  06A7  01F7               	clrf	i1___lwdiv@counter
  3903  06A8  0AF7               	incf	i1___lwdiv@counter,f
  3904  06A9  2EB5               	goto	i1l1593
  3905  06AA                     i1l1589:
  3906  06AA  3001               	movlw	1
  3907  06AB                     u121_25:
  3908  06AB  1003               	clrc
  3909  06AC  0DF0               	rlf	i1___lwdiv@divisor,f
  3910  06AD  0DF1               	rlf	i1___lwdiv@divisor+1,f
  3911  06AE  3EFF               	addlw	-1
  3912  06AF  1D03               	skipz
  3913  06B0  2EAB               	goto	u121_25
  3914  06B1                     i1l1591:
  3915  06B1  3001               	movlw	1
  3916  06B2  00F4               	movwf	??i1___lwdiv
  3917  06B3  0874               	movf	??i1___lwdiv,w
  3918  06B4  07F7               	addwf	i1___lwdiv@counter,f
  3919  06B5                     i1l1593:
  3920  06B5  1FF1               	btfss	i1___lwdiv@divisor+1,7
  3921  06B6  2EB8               	goto	u122_21
  3922  06B7  2EB9               	goto	u122_20
  3923  06B8                     u122_21:
  3924  06B8  2EAA               	goto	i1l1589
  3925  06B9                     u122_20:
  3926  06B9                     i1l1595:
  3927  06B9  3001               	movlw	1
  3928  06BA                     u123_25:
  3929  06BA  1003               	clrc
  3930  06BB  0DF5               	rlf	i1___lwdiv@quotient,f
  3931  06BC  0DF6               	rlf	i1___lwdiv@quotient+1,f
  3932  06BD  3EFF               	addlw	-1
  3933  06BE  1D03               	skipz
  3934  06BF  2EBA               	goto	u123_25
  3935  06C0  0871               	movf	i1___lwdiv@divisor+1,w
  3936  06C1  0273               	subwf	i1___lwdiv@dividend+1,w
  3937  06C2  1D03               	skipz
  3938  06C3  2EC6               	goto	u124_25
  3939  06C4  0870               	movf	i1___lwdiv@divisor,w
  3940  06C5  0272               	subwf	i1___lwdiv@dividend,w
  3941  06C6                     u124_25:
  3942  06C6  1C03               	skipc
  3943  06C7  2EC9               	goto	u124_21
  3944  06C8  2ECA               	goto	u124_20
  3945  06C9                     u124_21:
  3946  06C9  2ED1               	goto	i1l1601
  3947  06CA                     u124_20:
  3948  06CA                     i1l1597:
  3949  06CA  0870               	movf	i1___lwdiv@divisor,w
  3950  06CB  02F2               	subwf	i1___lwdiv@dividend,f
  3951  06CC  0871               	movf	i1___lwdiv@divisor+1,w
  3952  06CD  1C03               	skipc
  3953  06CE  03F3               	decf	i1___lwdiv@dividend+1,f
  3954  06CF  02F3               	subwf	i1___lwdiv@dividend+1,f
  3955  06D0                     i1l1599:
  3956  06D0  1475               	bsf	i1___lwdiv@quotient,0
  3957  06D1                     i1l1601:
  3958  06D1  3001               	movlw	1
  3959  06D2                     u125_25:
  3960  06D2  1003               	clrc
  3961  06D3  0CF1               	rrf	i1___lwdiv@divisor+1,f
  3962  06D4  0CF0               	rrf	i1___lwdiv@divisor,f
  3963  06D5  3EFF               	addlw	-1
  3964  06D6  1D03               	skipz
  3965  06D7  2ED2               	goto	u125_25
  3966  06D8                     i1l1603:
  3967  06D8  3001               	movlw	1
  3968  06D9  02F7               	subwf	i1___lwdiv@counter,f
  3969  06DA  1D03               	btfss	3,2
  3970  06DB  2EDD               	goto	u126_21
  3971  06DC  2EDE               	goto	u126_20
  3972  06DD                     u126_21:
  3973  06DD  2EB9               	goto	i1l1595
  3974  06DE                     u126_20:
  3975  06DE                     i1l1605:
  3976  06DE  0876               	movf	i1___lwdiv@quotient+1,w
  3977  06DF  00F1               	movwf	?i1___lwdiv+1
  3978  06E0  0875               	movf	i1___lwdiv@quotient,w
  3979  06E1  00F0               	movwf	?i1___lwdiv
  3980  06E2                     i1l531:
  3981  06E2  0008               	return
  3982  06E3                     __end_ofi1___lwdiv:
  3983                           
  3984                           	psect	text18
  3985  06E3                     __ptext18:	
  3986 ;; *************** function i1_Lcd_Write_String *****************
  3987 ;; Defined at:
  3988 ;;		line 97 in file "./lcd.h"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  a               2    5[COMMON] PTR unsigned char 
  3991 ;;		 -> STR_4(6), STR_3(19), STR_2(12), timer(6), 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  i               2   10[COMMON] int 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         2       0       0       0       0
  4004 ;;      Locals:         2       0       0       0       0
  4005 ;;      Temps:          3       0       0       0       0
  4006 ;;      Totals:         7       0       0       0       0
  4007 ;;Total ram usage:        7 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 2
  4010 ;; This function calls:
  4011 ;;		i1_Lcd_Write_Char
  4012 ;; This function is called by:
  4013 ;;		_INTR
  4014 ;;		i1_mostra_timer
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function i1_Lcd_Write_String
  4020  06E3                     i1_Lcd_Write_String:
  4021  06E3                     i1l1675:	
  4022                           ;incstack = 0
  4023 ;; hardware stack exceeded
  4024                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4025                           
  4026                           
  4027                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  4028  06E3  01FA               	clrf	i1Lcd_Write_String@i
  4029  06E4  01FB               	clrf	i1Lcd_Write_String@i+1
  4030  06E5  2F08               	goto	i1l1681
  4031  06E6                     i1l1677:
  4032                           
  4033                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  4034  06E6  087A               	movf	i1Lcd_Write_String@i,w
  4035  06E7  0775               	addwf	i1Lcd_Write_String@a,w
  4036  06E8  00F8               	movwf	??i1_Lcd_Write_String+1
  4037  06E9  0876               	movf	i1Lcd_Write_String@a+1,w
  4038  06EA  00F7               	movwf	??i1_Lcd_Write_String
  4039  06EB  1803               	skipnc
  4040  06EC  0AF7               	incf	??i1_Lcd_Write_String,f
  4041  06ED  1FFA               	btfss	i1Lcd_Write_String@i,7
  4042  06EE  2EF0               	goto	u140_20
  4043  06EF  03F7               	decf	??i1_Lcd_Write_String,f
  4044  06F0                     u140_20:
  4045  06F0  0877               	movf	??i1_Lcd_Write_String,w
  4046  06F1  00F9               	movwf	??i1_Lcd_Write_String+2
  4047  06F2  0879               	movf	??i1_Lcd_Write_String+2,w
  4048  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4049  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4050  06F5  00FF               	movwf	btemp+1
  4051  06F6  0878               	movf	??i1_Lcd_Write_String+1,w
  4052  06F7  0084               	movwf	4
  4053  06F8  120A  118A  265A  120A  118A  	fcall	stringtab
  4054  06FD  120A  158A  27C9  120A  118A  	fcall	i1_Lcd_Write_Char
  4055  0702                     i1l1679:
  4056  0702  3001               	movlw	1
  4057  0703  07FA               	addwf	i1Lcd_Write_String@i,f
  4058  0704  1803               	skipnc
  4059  0705  0AFB               	incf	i1Lcd_Write_String@i+1,f
  4060  0706  3000               	movlw	0
  4061  0707  07FB               	addwf	i1Lcd_Write_String@i+1,f
  4062  0708                     i1l1681:
  4063  0708  087A               	movf	i1Lcd_Write_String@i,w
  4064  0709  0775               	addwf	i1Lcd_Write_String@a,w
  4065  070A  00F8               	movwf	??i1_Lcd_Write_String+1
  4066  070B  0876               	movf	i1Lcd_Write_String@a+1,w
  4067  070C  00F7               	movwf	??i1_Lcd_Write_String
  4068  070D  1803               	skipnc
  4069  070E  0AF7               	incf	??i1_Lcd_Write_String,f
  4070  070F  1FFA               	btfss	i1Lcd_Write_String@i,7
  4071  0710  2F12               	goto	u141_20
  4072  0711  03F7               	decf	??i1_Lcd_Write_String,f
  4073  0712                     u141_20:
  4074  0712  0877               	movf	??i1_Lcd_Write_String,w
  4075  0713  00F9               	movwf	??i1_Lcd_Write_String+2
  4076  0714  0879               	movf	??i1_Lcd_Write_String+2,w
  4077  0715  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0716  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0717  00FF               	movwf	btemp+1
  4080  0718  0878               	movf	??i1_Lcd_Write_String+1,w
  4081  0719  0084               	movwf	4
  4082  071A  120A  118A  265A  120A  118A  	fcall	stringtab
  4083  071F  3A00               	xorlw	0
  4084  0720  1D03               	skipz
  4085  0721  2F23               	goto	u142_21
  4086  0722  2F24               	goto	u142_20
  4087  0723                     u142_21:
  4088  0723  2EE6               	goto	i1l1677
  4089  0724                     u142_20:
  4090  0724                     i1l99:
  4091  0724  0008               	return
  4092  0725                     __end_ofi1_Lcd_Write_String:
  4093                           
  4094                           	psect	text19
  4095  0FC9                     __ptext19:	
  4096 ;; *************** function i1_Lcd_Write_Char *****************
  4097 ;; Defined at:
  4098 ;;		line 81 in file "./lcd.h"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  a               1    wreg     unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  a               1    4[COMMON] unsigned char 
  4103 ;;  y               1    3[COMMON] unsigned char 
  4104 ;;  templcd         1    2[COMMON] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4114 ;;      Params:         0       0       0       0       0
  4115 ;;      Locals:         3       0       0       0       0
  4116 ;;      Temps:          1       0       0       0       0
  4117 ;;      Totals:         4       0       0       0       0
  4118 ;;Total ram usage:        4 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 1
  4121 ;; This function calls:
  4122 ;;		i1_Lcd_Port
  4123 ;; This function is called by:
  4124 ;;		i1_Lcd_Write_String
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           
  4129                           ;psect for function i1_Lcd_Write_Char
  4130  0FC9                     i1_Lcd_Write_Char:
  4131                           
  4132                           ;incstack = 0
  4133 ;; hardware stack exceeded
  4134                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4135                           ;i1Lcd_Write_Char@a stored from wreg
  4136  0FC9  00F4               	movwf	i1Lcd_Write_Char@a
  4137  0FCA                     i1l1563:
  4138                           
  4139                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char templcd,y;
      +                          ;./lcd.h: 84:    templcd = a&0x0F;
  4140  0FCA  0874               	movf	i1Lcd_Write_Char@a,w
  4141  0FCB  390F               	andlw	15
  4142  0FCC  00F1               	movwf	??i1_Lcd_Write_Char
  4143  0FCD  0871               	movf	??i1_Lcd_Write_Char,w
  4144  0FCE  00F2               	movwf	i1Lcd_Write_Char@templcd
  4145                           
  4146                           ;./lcd.h: 85:    y = a&0xF0;
  4147  0FCF  0874               	movf	i1Lcd_Write_Char@a,w
  4148  0FD0  39F0               	andlw	240
  4149  0FD1  00F1               	movwf	??i1_Lcd_Write_Char
  4150  0FD2  0871               	movf	??i1_Lcd_Write_Char,w
  4151  0FD3  00F3               	movwf	i1Lcd_Write_Char@y
  4152  0FD4                     i1l1565:
  4153                           
  4154                           ;./lcd.h: 86:    RD2 = 1;
  4155  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0FD6  1508               	bsf	8,2	;volatile
  4158  0FD7                     i1l1567:
  4159                           
  4160                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  4161  0FD7  0873               	movf	i1Lcd_Write_Char@y,w
  4162  0FD8  00F1               	movwf	??i1_Lcd_Write_Char
  4163  0FD9  3004               	movlw	4
  4164  0FDA                     u119_25:
  4165  0FDA  1003               	clrc
  4166  0FDB  0CF1               	rrf	??i1_Lcd_Write_Char,f
  4167  0FDC  3EFF               	addlw	-1
  4168  0FDD  1D03               	skipz
  4169  0FDE  2FDA               	goto	u119_25
  4170  0FDF  0871               	movf	??i1_Lcd_Write_Char,w
  4171  0FE0  120A  118A  27D8  120A  158A  	fcall	i1_Lcd_Port
  4172  0FE5                     i1l1569:
  4173                           
  4174                           ;./lcd.h: 88:    RD3 = 1;
  4175  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0FE7  1588               	bsf	8,3	;volatile
  4178  0FE8                     i1l1571:
  4179                           
  4180                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4181  0FE8  300D               	movlw	13
  4182  0FE9  00F1               	movwf	??i1_Lcd_Write_Char
  4183  0FEA                     u207_27:
  4184  0FEA  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  4185  0FEB  2FEA               	goto	u207_27
  4186  0FEC                     i1l1573:
  4187                           
  4188                           ;./lcd.h: 90:    RD3 = 0;
  4189  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0FEE  1188               	bcf	8,3	;volatile
  4192  0FEF                     i1l1575:
  4193                           
  4194                           ;./lcd.h: 91:    Lcd_Port(templcd);
  4195  0FEF  0872               	movf	i1Lcd_Write_Char@templcd,w
  4196  0FF0  120A  118A  27D8  120A  158A  	fcall	i1_Lcd_Port
  4197  0FF5                     i1l1577:
  4198                           
  4199                           ;./lcd.h: 92:    RD3 = 1;
  4200  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0FF7  1588               	bsf	8,3	;volatile
  4203  0FF8                     i1l1579:
  4204                           
  4205                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4206  0FF8  300D               	movlw	13
  4207  0FF9  00F1               	movwf	??i1_Lcd_Write_Char
  4208  0FFA                     u208_27:
  4209  0FFA  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  4210  0FFB  2FFA               	goto	u208_27
  4211  0FFC                     i1l1581:
  4212                           
  4213                           ;./lcd.h: 94:    RD3 = 0;
  4214  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0FFE  1188               	bcf	8,3	;volatile
  4217  0FFF                     i1l93:
  4218  0FFF  0008               	return
  4219  1000                     __end_ofi1_Lcd_Write_Char:
  4220                           
  4221                           	psect	text20
  4222  0531                     __ptext20:	
  4223 ;; *************** function i1_Lcd_Set_Cursor *****************
  4224 ;; Defined at:
  4225 ;;		line 41 in file "./lcd.h"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  a               1    wreg     unsigned char 
  4228 ;;  b               1    4[COMMON] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  a               1    7[COMMON] unsigned char 
  4231 ;;  templcd         1   10[COMMON] unsigned char 
  4232 ;;  y               1    9[COMMON] unsigned char 
  4233 ;;  z               1    8[COMMON] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, pclath, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         1       0       0       0       0
  4244 ;;      Locals:         4       0       0       0       0
  4245 ;;      Temps:          2       0       0       0       0
  4246 ;;      Totals:         7       0       0       0       0
  4247 ;;Total ram usage:        7 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 2
  4250 ;; This function calls:
  4251 ;;		i1_Lcd_Cmd
  4252 ;; This function is called by:
  4253 ;;		_INTR
  4254 ;;		i1_mostra_timer
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function i1_Lcd_Set_Cursor
  4260  0531                     i1_Lcd_Set_Cursor:
  4261                           
  4262                           ;incstack = 0
  4263 ;; hardware stack exceeded
  4264                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4265                           ;i1Lcd_Set_Cursor@a stored from wreg
  4266  0531  00F7               	movwf	i1Lcd_Set_Cursor@a
  4267  0532                     i1l1655:
  4268                           
  4269                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          lcd,z,y;;./lcd.h: 44:  if(a == 1)
  4270  0532  0377               	decf	i1Lcd_Set_Cursor@a,w
  4271  0533  1D03               	btfss	3,2
  4272  0534  2D36               	goto	u136_21
  4273  0535  2D37               	goto	u136_20
  4274  0536                     u136_21:
  4275  0536  2D5A               	goto	i1l1665
  4276  0537                     u136_20:
  4277  0537                     i1l1657:
  4278                           
  4279                           ;./lcd.h: 45:  {;./lcd.h: 46:    templcd = 0x80 + b - 1;
  4280  0537  0874               	movf	i1Lcd_Set_Cursor@b,w
  4281  0538  3E7F               	addlw	127
  4282  0539  00F5               	movwf	??i1_Lcd_Set_Cursor
  4283  053A  0875               	movf	??i1_Lcd_Set_Cursor,w
  4284  053B  00FA               	movwf	i1Lcd_Set_Cursor@templcd
  4285                           
  4286                           ;./lcd.h: 47:   z = templcd>>4;
  4287  053C  087A               	movf	i1Lcd_Set_Cursor@templcd,w
  4288  053D  00F5               	movwf	??i1_Lcd_Set_Cursor
  4289  053E  3004               	movlw	4
  4290  053F                     u137_25:
  4291  053F  1003               	clrc
  4292  0540  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  4293  0541  3EFF               	addlw	-1
  4294  0542  1D03               	skipz
  4295  0543  2D3F               	goto	u137_25
  4296  0544  0875               	movf	??i1_Lcd_Set_Cursor,w
  4297  0545  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  4298  0546  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  4299  0547  00F8               	movwf	i1Lcd_Set_Cursor@z
  4300  0548                     i1l1659:
  4301                           
  4302                           ;./lcd.h: 48:   y = templcd & 0x0F;
  4303  0548  087A               	movf	i1Lcd_Set_Cursor@templcd,w
  4304  0549  390F               	andlw	15
  4305  054A  00F5               	movwf	??i1_Lcd_Set_Cursor
  4306  054B  0875               	movf	??i1_Lcd_Set_Cursor,w
  4307  054C  00F9               	movwf	i1Lcd_Set_Cursor@y
  4308  054D                     i1l1661:
  4309                           
  4310                           ;./lcd.h: 49:   Lcd_Cmd(z);
  4311  054D  0878               	movf	i1Lcd_Set_Cursor@z,w
  4312  054E  120A  158A  2773  120A  118A  	fcall	i1_Lcd_Cmd
  4313  0553                     i1l1663:
  4314                           
  4315                           ;./lcd.h: 50:   Lcd_Cmd(y);
  4316  0553  0879               	movf	i1Lcd_Set_Cursor@y,w
  4317  0554  120A  158A  2773  120A  118A  	fcall	i1_Lcd_Cmd
  4318                           
  4319                           ;./lcd.h: 51:  }
  4320  0559  2D82               	goto	i1l87
  4321  055A                     i1l1665:
  4322  055A  3002               	movlw	2
  4323  055B  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  4324  055C  1D03               	btfss	3,2
  4325  055D  2D5F               	goto	u138_21
  4326  055E  2D60               	goto	u138_20
  4327  055F                     u138_21:
  4328  055F  2D82               	goto	i1l87
  4329  0560                     u138_20:
  4330  0560                     i1l1667:
  4331                           
  4332                           ;./lcd.h: 53:  {;./lcd.h: 54:   templcd = 0xC0 + b - 1;
  4333  0560  0874               	movf	i1Lcd_Set_Cursor@b,w
  4334  0561  3EBF               	addlw	191
  4335  0562  00F5               	movwf	??i1_Lcd_Set_Cursor
  4336  0563  0875               	movf	??i1_Lcd_Set_Cursor,w
  4337  0564  00FA               	movwf	i1Lcd_Set_Cursor@templcd
  4338                           
  4339                           ;./lcd.h: 55:   z = templcd>>4;
  4340  0565  087A               	movf	i1Lcd_Set_Cursor@templcd,w
  4341  0566  00F5               	movwf	??i1_Lcd_Set_Cursor
  4342  0567  3004               	movlw	4
  4343  0568                     u139_25:
  4344  0568  1003               	clrc
  4345  0569  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  4346  056A  3EFF               	addlw	-1
  4347  056B  1D03               	skipz
  4348  056C  2D68               	goto	u139_25
  4349  056D  0875               	movf	??i1_Lcd_Set_Cursor,w
  4350  056E  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  4351  056F  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  4352  0570  00F8               	movwf	i1Lcd_Set_Cursor@z
  4353  0571                     i1l1669:
  4354                           
  4355                           ;./lcd.h: 56:   y = templcd & 0x0F;
  4356  0571  087A               	movf	i1Lcd_Set_Cursor@templcd,w
  4357  0572  390F               	andlw	15
  4358  0573  00F5               	movwf	??i1_Lcd_Set_Cursor
  4359  0574  0875               	movf	??i1_Lcd_Set_Cursor,w
  4360  0575  00F9               	movwf	i1Lcd_Set_Cursor@y
  4361  0576                     i1l1671:
  4362                           
  4363                           ;./lcd.h: 57:   Lcd_Cmd(z);
  4364  0576  0878               	movf	i1Lcd_Set_Cursor@z,w
  4365  0577  120A  158A  2773  120A  118A  	fcall	i1_Lcd_Cmd
  4366  057C                     i1l1673:
  4367                           
  4368                           ;./lcd.h: 58:   Lcd_Cmd(y);
  4369  057C  0879               	movf	i1Lcd_Set_Cursor@y,w
  4370  057D  120A  158A  2773  120A  118A  	fcall	i1_Lcd_Cmd
  4371  0582                     i1l87:
  4372  0582  0008               	return
  4373  0583                     __end_ofi1_Lcd_Set_Cursor:
  4374                           
  4375                           	psect	text21
  4376  0F59                     __ptext21:	
  4377 ;; *************** function i1_Lcd_Clear *****************
  4378 ;; Defined at:
  4379 ;;		line 35 in file "./lcd.h"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0
  4396 ;;      Totals:         0       0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 2
  4400 ;; This function calls:
  4401 ;;		i1_Lcd_Cmd
  4402 ;; This function is called by:
  4403 ;;		i1_mostra_timer
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function i1_Lcd_Clear
  4409  0F59                     i1_Lcd_Clear:
  4410  0F59                     i1l1653:	
  4411                           ;incstack = 0
  4412 ;; hardware stack exceeded
  4413                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4414                           
  4415                           
  4416                           ;./lcd.h: 37:  Lcd_Cmd(0);
  4417  0F59  3000               	movlw	0
  4418  0F5A  120A  158A  2773  120A  158A  	fcall	i1_Lcd_Cmd
  4419                           
  4420                           ;./lcd.h: 38:  Lcd_Cmd(1);
  4421  0F5F  3001               	movlw	1
  4422  0F60  120A  158A  2773  120A  158A  	fcall	i1_Lcd_Cmd
  4423  0F65                     i1l81:
  4424  0F65  0008               	return
  4425  0F66                     __end_ofi1_Lcd_Clear:
  4426                           
  4427                           	psect	text22
  4428  0F73                     __ptext22:	
  4429 ;; *************** function i1_Lcd_Cmd *****************
  4430 ;; Defined at:
  4431 ;;		line 26 in file "./lcd.h"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  a               1    3[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0
  4447 ;;      Temps:          2       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 1
  4452 ;; This function calls:
  4453 ;;		i1_Lcd_Port
  4454 ;; This function is called by:
  4455 ;;		i1_Lcd_Clear
  4456 ;;		i1_Lcd_Set_Cursor
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function i1_Lcd_Cmd
  4462  0F73                     i1_Lcd_Cmd:
  4463                           
  4464                           ;incstack = 0
  4465 ;; hardware stack exceeded
  4466                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4467                           ;i1Lcd_Cmd@a stored from wreg
  4468  0F73  00F3               	movwf	i1Lcd_Cmd@a
  4469  0F74                     i1l1553:
  4470                           
  4471                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD2 = 0;
  4472  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  4474  0F76  1108               	bcf	8,2	;volatile
  4475  0F77                     i1l1555:
  4476                           
  4477                           ;./lcd.h: 29:  Lcd_Port(a);
  4478  0F77  0873               	movf	i1Lcd_Cmd@a,w
  4479  0F78  120A  118A  27D8  120A  158A  	fcall	i1_Lcd_Port
  4480  0F7D                     i1l1557:
  4481                           
  4482                           ;./lcd.h: 30:  RD3 = 1;
  4483  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0F7F  1588               	bsf	8,3	;volatile
  4486  0F80                     i1l1559:
  4487                           
  4488                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  4489  0F80  3006               	movlw	6
  4490  0F81  00F2               	movwf	??i1_Lcd_Cmd+1
  4491  0F82  3030               	movlw	48
  4492  0F83  00F1               	movwf	??i1_Lcd_Cmd
  4493  0F84                     u209_27:
  4494  0F84  0BF1               	decfsz	??i1_Lcd_Cmd,f
  4495  0F85  2F84               	goto	u209_27
  4496  0F86  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  4497  0F87  2F84               	goto	u209_27
  4498  0F88  0000               	nop
  4499  0F89                     i1l1561:
  4500                           
  4501                           ;./lcd.h: 32:         RD3 = 0;
  4502  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0F8B  1188               	bcf	8,3	;volatile
  4505  0F8C                     i1l78:
  4506  0F8C  0008               	return
  4507  0F8D                     __end_ofi1_Lcd_Cmd:
  4508                           
  4509                           	psect	text23
  4510  07D8                     __ptext23:	
  4511 ;; *************** function i1_Lcd_Port *****************
  4512 ;; Defined at:
  4513 ;;		line 4 in file "./lcd.h"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  a               1    wreg     unsigned char 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  a               1    0[COMMON] unsigned char 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4527 ;;      Params:         0       0       0       0       0
  4528 ;;      Locals:         1       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0
  4530 ;;      Totals:         1       0       0       0       0
  4531 ;;Total ram usage:        1 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		i1_Lcd_Cmd
  4537 ;;		i1_Lcd_Write_Char
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           
  4542                           ;psect for function i1_Lcd_Port
  4543  07D8                     i1_Lcd_Port:
  4544                           
  4545                           ;incstack = 0
  4546 ;; hardware stack exceeded
  4547                           ; Regs used in i1_Lcd_Port: [wreg]
  4548                           ;i1Lcd_Port@a stored from wreg
  4549  07D8  00F0               	movwf	i1Lcd_Port@a
  4550  07D9                     i1l1451:
  4551                           
  4552                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  4553  07D9  1C70               	btfss	i1Lcd_Port@a,0
  4554  07DA  2FDC               	goto	u101_21
  4555  07DB  2FDD               	goto	u101_20
  4556  07DC                     u101_21:
  4557  07DC  2FE1               	goto	i1l67
  4558  07DD                     u101_20:
  4559  07DD                     i1l1453:
  4560                           
  4561                           ;./lcd.h: 7:   RD4 = 1;
  4562  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  4563  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  4564  07DF  1608               	bsf	8,4	;volatile
  4565  07E0  2FE4               	goto	i1l68
  4566  07E1                     i1l67:	
  4567                           ;./lcd.h: 8:  else
  4568                           
  4569                           
  4570                           ;./lcd.h: 9:   RD4 = 0;
  4571  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4572  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4573  07E3  1208               	bcf	8,4	;volatile
  4574  07E4                     i1l68:
  4575                           
  4576                           ;./lcd.h: 11:  if(a & 2)
  4577  07E4  1CF0               	btfss	i1Lcd_Port@a,1
  4578  07E5  2FE7               	goto	u102_21
  4579  07E6  2FE8               	goto	u102_20
  4580  07E7                     u102_21:
  4581  07E7  2FEA               	goto	i1l69
  4582  07E8                     u102_20:
  4583  07E8                     i1l1455:
  4584                           
  4585                           ;./lcd.h: 12:   RD5 = 1;
  4586  07E8  1688               	bsf	8,5	;volatile
  4587  07E9  2FEB               	goto	i1l70
  4588  07EA                     i1l69:	
  4589                           ;./lcd.h: 13:  else
  4590                           
  4591                           
  4592                           ;./lcd.h: 14:   RD5 = 0;
  4593  07EA  1288               	bcf	8,5	;volatile
  4594  07EB                     i1l70:
  4595                           
  4596                           ;./lcd.h: 16:  if(a & 4)
  4597  07EB  1D70               	btfss	i1Lcd_Port@a,2
  4598  07EC  2FEE               	goto	u103_21
  4599  07ED  2FEF               	goto	u103_20
  4600  07EE                     u103_21:
  4601  07EE  2FF1               	goto	i1l71
  4602  07EF                     u103_20:
  4603  07EF                     i1l1457:
  4604                           
  4605                           ;./lcd.h: 17:   RD6 = 1;
  4606  07EF  1708               	bsf	8,6	;volatile
  4607  07F0  2FF2               	goto	i1l72
  4608  07F1                     i1l71:	
  4609                           ;./lcd.h: 18:  else
  4610                           
  4611                           
  4612                           ;./lcd.h: 19:   RD6 = 0;
  4613  07F1  1308               	bcf	8,6	;volatile
  4614  07F2                     i1l72:
  4615                           
  4616                           ;./lcd.h: 21:  if(a & 8)
  4617  07F2  1DF0               	btfss	i1Lcd_Port@a,3
  4618  07F3  2FF5               	goto	u104_21
  4619  07F4  2FF6               	goto	u104_20
  4620  07F5                     u104_21:
  4621  07F5  2FF8               	goto	i1l73
  4622  07F6                     u104_20:
  4623  07F6                     i1l1459:
  4624                           
  4625                           ;./lcd.h: 22:   RD7 = 1;
  4626  07F6  1788               	bsf	8,7	;volatile
  4627  07F7  2FF9               	goto	i1l75
  4628  07F8                     i1l73:	
  4629                           ;./lcd.h: 23:  else
  4630                           
  4631                           
  4632                           ;./lcd.h: 24:   RD7 = 0;
  4633  07F8  1388               	bcf	8,7	;volatile
  4634  07F9                     i1l75:
  4635  07F9  0008               	return
  4636  07FA                     __end_ofi1_Lcd_Port:
  4637  007E                     btemp	set	126	;btemp
  4638  007E                     wtemp0	set	126
  4639                           
  4640                           	psect	config
  4641                           
  4642                           ;Config register CONFIG @ 0x2007
  4643                           ;	Oscillator Selection bits
  4644                           ;	FOSC = HS, HS oscillator
  4645                           ;	Watchdog Timer Enable bit
  4646                           ;	WDTE = OFF, WDT disabled
  4647                           ;	Power-up Timer Enable bit
  4648                           ;	PWRTE = ON, PWRT enabled
  4649                           ;	Brown-out Reset Enable bit
  4650                           ;	BOREN = ON, BOR enabled
  4651                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4652                           ;	LVP = 0x1, unprogrammed default
  4653                           ;	Data EEPROM Memory Code Protection bit
  4654                           ;	CPD = 0x1, unprogrammed default
  4655                           ;	Flash Program Memory Write Enable bits
  4656                           ;	WRT = 0x3, unprogrammed default
  4657                           ;	In-Circuit Debugger Mode bit
  4658                           ;	DEBUG = 0x1, unprogrammed default
  4659                           ;	Flash Program Memory Code Protection bit
  4660                           ;	CP = 0x1, unprogrammed default
  4661  2007                     	org	8199
  4662  2007  3FF2               	dw	16370

Data Sizes:
    Strings     43
    Constant    10
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      58
    BANK1            80     13      13
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> timer(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[12]), timer(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTR in COMMON

    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _mostra_timer->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _INTR in BANK0

    _INTR->i1_mostra_timer
    i1_mostra_timer->i1_sprintf

Critical Paths under _main in BANK1

    _main->_regula_timer
    _regula_timer->_mostra_timer
    _mostra_timer->_sprintf

Critical Paths under _INTR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4377
                                             10 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _regula_timer
 ---------------------------------------------------------------------------------
 (1) _regula_timer                                         2     2      0    2917
                                              8 BANK1      2     2      0
                       _mostra_timer
 ---------------------------------------------------------------------------------
 (2) _mostra_timer                                         1     1      0    2917
                                              7 BANK1      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    18      5    1655
                                             36 BANK0      8     3      5
                                              0 BANK1      7     7      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                             30 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     7     5      2     520
                                             27 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     178
                                             23 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       7     6      1     632
                                             26 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             26 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                             23 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTR                                                 6     6      0    2646
                                             16 BANK0      6     6      0
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
                     i1_mostra_timer
 ---------------------------------------------------------------------------------
 (7) i1_mostra_timer                                       1     1      0    1842
                                             15 BANK0      1     1      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (8) i1_sprintf                                           23    18      5     928
                                              0 BANK0     15    10      5
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Write_String                                   7     5      2     346
                                              5 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Set_Cursor                                     7     6      1     458
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Port                                          1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _regula_timer
     _mostra_timer
       _Lcd_Clear
       _Lcd_Set_Cursor
       _Lcd_Write_String
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)

 _INTR (ROOT)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port
   i1_mostra_timer
     i1_Lcd_Clear
       i1_Lcd_Cmd
     i1_Lcd_Set_Cursor
     i1_Lcd_Write_String
     i1_sprintf
       i1___lwdiv
       i1___lwmod
         i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      D       D       7       16.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 14 01:24:14 2021

                          pc 0002                           l70 0FBA                           l71 0FC0  
                         l72 0FC1                           l73 0FC7                           l81 0F72  
                         l90 04D8                           l75 0FC8                           l67 0FB2  
                         l68 0FB3                           l69 0FB9                           l93 0761  
                         l78 0FA8                           l87 0530                           l99 0659  
                         fsr 0004                          l113 0381                          l125 0583  
                        l141 02F9                          l126 0596                          l129 05CD  
                        l255 0167                          l531 0613                          l541 079D  
                        _RD2 0042                          _RD3 0043                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        u830 0FB0                          u831 0FAF                          u840 0FB7  
                        u841 0FB6                          u850 0FBE                          u851 0FBD  
                        u860 0FC5                          u861 0FC4                          u875 0736  
                        fsr0 0004                          indf 0000                         l2001 078C  
                       l2003 0793                         l2011 0035                         l2005 0799  
                       l2021 0050                         l2013 003B                         l2101 05A0  
                       l2031 0091                         l2023 0073                         l2015 0048  
                       l2111 05C1                         l2103 05A5                         l1401 075E  
                       l2033 0096                         l2025 007D                         l2017 004F  
                       l2009 002C                         l2105 05B0                         l2121 025B  
                       l2113 0250                         l2051 00E3                         l2043 00BC  
                       l2027 0085                         l2107 05B6                         l2131 0262  
                       l2123 025C                         l2115 0256                         l2053 00EC  
                       l2045 00CA                         l2029 0089                         l2061 014C  
                       l2109 05BC                         l2141 0269                         l2133 0263  
                       l2125 025D                         l2117 0257                         l2055 012C  
                       l2047 00D0                         l2039 0098                         l2063 0161  
                       l2071 0300                         l2151 0274                         l2143 026E  
                       l2135 0264                         l2127 0260                         l2119 0258  
                       l2057 0139                         l2049 00DD                         l2081 033E  
                       l2073 030F                         l2161 027F                         l2153 0277  
                       l2145 0271                         l2137 0265                         l2129 0261  
                       l1371 0FC5                         l1363 0FAC                         l2059 013F  
                       l2235 0068                         l2091 0376                         l2083 0345  
                       l2075 0319                         l2171 02AA                         l2163 028B  
                       l2155 0278                         l2147 0272                         l2139 0268  
                       l1365 0FB0                         l1381 0FA5                         l1373 0F90  
                       l1461 0F66                         l2085 0351                         l2077 0320  
                       l2093 0589                         l2181 02B5                         l2173 02AF  
                       l2165 0290                         l2157 027B                         l2149 0273  
                       l1367 0FB7                         l1375 0F91                         l1471 04FD  
                       l1463 04DC                         l1391 0744                         l1383 0728  
                       l2087 0356                         l2079 032F                         l2095 058F  
                       l2191 02E6                         l2183 02BC                         l2175 02B2  
                       l2167 0295                         l2159 027C                         l1369 0FBE  
                       l1377 0F97                         l1481 0528                         l1465 04E1  
                       l1473 0506                         l1393 074B                         l1385 0732  
                       l2089 0360                         l2193 02E9                         l2185 02D0  
                       l2177 02B3                         l2169 029F                         l1379 0F9A  
                       l1475 050C                         l1467 04F2                         l1395 074E  
                       l1387 0733                         l1483 0614                         l2099 059A  
                       l2187 02D4                         l2179 02B4                         l1477 051D  
                       l1469 04F7                         l1397 0754                         l1389 0741  
                       l1485 0619                         l2189 02D9                         l1751 0498  
                       l1479 0522                         l1399 0757                         l1487 0635  
                       l1753 049E                         l1745 0476                         l1489 063D  
                       l1747 047C                         l1749 0487                         l1961 05CE  
                       l1971 05E6                         l1963 05D2                         l1981 0609  
                       l1973 05EA                         l1965 05D8                         l1975 05FB  
                       l1967 05DB                         l1983 060F                         l1991 076D  
                       l1977 0601                         l1969 05E2                         l1993 0774  
                       l1979 0602                         l1995 0778                         l1987 0762  
                       l1997 077C                         l1989 076A                         l1999 0786  
                       STR_1 0699                         STR_2 0687                         STR_3 0674  
                       STR_4 0693                         u1100 0647                         u1110 0659  
                       u1111 0658                         u1050 04E1                         u1051 04E0  
                       u1070 050C                         u1071 050B                         u2007 0748  
                       u1065 04E9                         u2017 075B                         u1090 0623  
                       u2027 0482                         u2037 0493                         u1085 0514  
                       u2047 04A4                         u2057 0FA0                         u1710 060F  
                       u1711 060E                         u1720 076A                         u1800 00BB  
                       u1705 0603                         u1721 0769                         u1801 00BA  
                       u1650 05D8                         u1810 00CA                         u1651 05D7  
                       u1811 00C9                         u1740 077C                         u1820 00D0  
                       u1900 0595                         u1741 077B                         u1821 00CF  
                       u1805 00B7                         u1901 0594                         u1670 05EA  
                       u1750 0786                         u1830 014C                         u1910 059A  
                       u1671 05E9                         u1751 0785                         u1735 076E  
                       u1831 014B                         u1911 0599                         u1840 0161  
                       u1920 05B6                         u1665 05DC                         u1841 0160  
                       u1921 05B5                         u1690 05FB                         u1770 0799  
                       u1850 030F                         u1930 02D4                         u1691 05FA  
                       u1771 0798                         u1755 0782                         u1851 030E  
                       u1931 02D3                         u1780 003B                         u1860 032F  
                       u1940 02E6                         u1685 05EB                         u1765 078D  
                       u1781 003A                         u1861 032E                         u1941 02E5  
                       u1790 0089                         u1870 033E                         u1695 05F7  
                       u1791 0088                         u1871 033D                         u1855 030B  
                       u1880 0589                         u1865 032B                         u1881 0588  
                       u1945 02E2                         u1890 058F                         u1875 033A  
                       u1891 058E                         u1957 0286                         _INTF 0059  
                       u1967 02B9                         u1977 02F1                         u1987 05AB  
                       u1997 05C7                         i1l70 07EB                         i1l71 07F1  
                       i1l72 07F2                         i1l73 07F8                         i1l81 0F65  
                       _INTR 03FE                         i1l75 07F9                         i1l67 07E1  
                       i1l68 07E4                         i1l69 07EA                         i1l93 0FFF  
                       i1l78 0F8C                         i1l87 0582                         i1l99 0724  
             _contador_horas 004E       __end_ofi1_mostra_timer 03FE            ?_Lcd_Write_String 003B  
                       _main 0250                         btemp 007E                         start 0012  
         ??_Lcd_Write_String 003D              __end_of_Lcd_Cmd 0FA9                        ?_INTR 0070  
                      ?_main 0070              __end_of___lwdiv 0614                        i1l113 03FD  
                      i1l122 0469                        i1l255 024F              __end_of___lwmod 079E  
                      i1l531 06E2                        i1l541 07D7            ?i1_Lcd_Set_Cursor 0074  
                      _TMR1H 000F                        _TMR1L 000E      __size_of_Lcd_Set_Cursor 0058  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                  ?i1_Lcd_Port 0070           ??i1_Lcd_Set_Cursor 0075  
         __size_ofi1_Lcd_Cmd 001A           i1___lwmod@dividend 007A              __end_of_dpowers 0674  
                      _conta 004C                        _timer 0054                        pclath 000A  
__size_ofi1_Lcd_Write_String 0042              ?i1_mostra_timer 0070                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0168           __size_ofi1___lwdiv 0044  
         __size_ofi1___lwmod 003A             __end_of_Lcd_Init 04D9                 __end_of_INTR 0476  
           __end_of_Lcd_Port 0FC9              __initialization 0015      i1Lcd_Write_Char@templcd 0072  
               __end_of_main 0300                       ??_INTR 0030                   i1sprintf@c 002E  
                 i1sprintf@f 0020                       ??_main 00AA           __size_ofi1_sprintf 00E8  
         __size_of_Lcd_Clear 000D                       _ADRESH 001E                       _ADRESL 009E  
                     u101_20 07DD                       u101_21 07DC                       u102_20 07E8  
                     u102_21 07E7                       u103_20 07EF                       u103_21 07EE  
                     u104_20 07F6                       u120_20 06A7                       u104_21 07F5  
                     i1l1601 06D1                       u120_21 06A6                       i1l1451 07D9  
                     i1l1603 06D8                       i1l1611 07A4                       i1l1453 07DD  
                     i1l1605 06DE                       i1l1621 07C0                       i1l1613 07A7  
                     i1l1701 01AC                       i1l2237 0195                       i1l1455 07E8  
                     i1l1623 07C6                       i1l1615 07AE                       i1l1703 01B0  
                     i1l1457 07EF                       i1l1561 0F89                       i1l1553 0F74  
                     i1l1625 07CD                       i1l1617 07B2                       i1l1609 079E  
                     i1l1721 01E7                       i1l1713 01BB                       i1l1705 01B4  
                     i1l1801 03FE                       i1l1459 07F6                       i1l1555 0F77  
                     i1l1571 0FE8                       i1l1563 0FCA                       i1l1619 07B6  
                     i1l1627 07D3                       i1l1731 022C                       i1l1723 01EE  
                     i1l1707 01B9                       i1l1811 041D                       i1l1803 0402  
                     i1l1557 0F7D                       i1l1653 0F59                       i1l1661 054D  
                     i1l1581 0FFC                       i1l1573 0FEC                       i1l1565 0FD4  
                     u121_25 06AB                       i1l1733 0230                       i1l1725 01F2  
                     i1l1717 01D7                       i1l1821 0436                       i1l1813 041E  
                     i1l1805 0406                       i1l1559 0F80                       i1l1671 0576  
                     i1l1663 0553                       i1l1655 0532                       i1l1575 0FEF  
                     i1l1567 0FD7                       i1l1591 06B1                       i1l1583 069F  
                     i1l1727 01F7                       i1l1719 01E1                       i1l1735 0239  
                     i1l1831 0455                       i1l1823 043B                       i1l1815 0428  
                     i1l1807 040E                       u122_20 06B9                       u130_20 07C0  
                     i1l1673 057C                       i1l1657 0537                       i1l1665 055A  
                     i1l1577 0FF5                       i1l1569 0FE5                       i1l1681 0708  
                     u122_21 06B8                       i1l1593 06B5                       i1l1585 06A1  
                     u130_21 07BF                       i1l1729 0225                       i1l1737 024B  
                     i1l1833 0458                       i1l1825 0443                       i1l1817 042E  
                     i1l1809 0417                       i1l1667 0560                       i1l1659 0548  
                     i1l1579 0FF8                       i1l1675 06E3                       i1l1595 06B9  
                     i1l1587 06A7                       i1l1691 0182                       i1l1683 016B  
                     i1l1835 0460                       i1l1827 0449                       i1l1819 0434  
                     i1l1669 0571                       i1l1677 06E6                       i1l1597 06CA  
                     i1l1589 06AA                       u130_25 07BC                       i1l1685 0170  
                     i1l1781 03A2                       i1l1829 044A                       i1l1679 0702  
                     i1l1599 06D0                       i1l1695 0183                       i1l1687 0176  
                     i1l1791 03D8                       i1l1783 03B1                       i1l1775 0382  
                     i1l1697 01A0                       i1l1689 017D                       i1l1793 03E0  
                     i1l1785 03C0                       i1l1777 0391                       i1l1699 01A8  
                     i1l1795 03F4                       i1l1787 03C7                       i1l1779 039B  
                     u123_25 06BA                       u131_25 07C7                       i1l1789 03D3  
                     u140_20 06F0                       u124_20 06CA                       u132_20 07D3  
                     u124_21 06C9                       u132_21 07D2                       u124_25 06C6  
                     u141_20 0712                       u125_25 06D2                       u142_20 0724  
                     u126_20 06DE                       u142_21 0723                       u126_21 06DD  
                     u206_27 0450                       u127_20 07A4                       u143_20 0176  
                     u127_21 07A3                       u143_21 0175                       u119_25 0FDA  
                     u207_27 0FEA                       u136_20 0537                       u144_20 01B0  
                     u160_20 042E                       u136_21 0536                       u144_21 01AF  
                     u160_21 042D                       u128_25 07A8                       u208_27 0FFA  
                     u129_20 07B6                       u145_20 01D6                       u161_20 0443  
                     u129_21 07B5                       u145_21 01D5                       u161_21 0442  
                     u137_25 053F                       u145_25 01D2                       u209_27 0F84  
                     u138_20 0560                       u146_20 01E1                       u162_20 0449  
                     u138_21 055F                       u146_21 01E0                       u162_21 0448  
                     u147_20 01E7                       u155_20 0391                       u147_21 01E6  
                     u155_21 0390                       u139_25 0568                       u155_25 038D  
                     u148_20 0239                       u156_20 03B1                       u148_21 0238  
                     u156_21 03B0                       u156_25 03AD                       u149_20 024B  
                     u157_20 03C0                       u149_21 024A                       u157_21 03BF  
                     u157_25 03BC                       u158_20 0402                       u158_21 0401  
                     u159_20 041D                       u159_21 041C            ?i1_Lcd_Write_Char 0070  
                  ??_Lcd_Cmd 0037                       _TMR1IF 0060      __size_of_Lcd_Write_Char 003D  
               ?i1_Lcd_Clear 0070                i1sprintf@flag 0029             _contador_minutos 0050  
              i1sprintf@prec 002A           ??i1_Lcd_Write_Char 0071          __size_ofi1_Lcd_Port 0022  
          __end_ofi1_Lcd_Cmd 0F8D            i1Lcd_Write_Char@a 0074            i1Lcd_Write_Char@y 0073  
                  ??___lwdiv 003A                    ??___lwmod 0042            __end_ofi1___lwdiv 06E3  
          __end_ofi1___lwmod 07D8                       saved_w 007E                    ??_sprintf 0049  
            Lcd_Set_Cursor@a 003D              Lcd_Set_Cursor@b 003A              Lcd_Set_Cursor@y 003F  
            Lcd_Set_Cursor@z 003E      __end_of__initialization 0025            __end_ofi1_sprintf 0250  
          __end_of_Lcd_Clear 0F73               __pcstackCOMMON 0070        Lcd_Write_Char@templcd 0038  
             _Lcd_Set_Cursor 04D9               _OPTION_REGbits 0081                  i1sprintf@ap 0028  
                i1sprintf@sp 002D                    ?_Lcd_Init 0070                    ?_Lcd_Port 0070  
                 __pbssBANK0 004C                   __pmaintext 0250                ?_regula_timer 0070  
                 __pintentry 0004    __size_of_Lcd_Write_String 0046       __end_of_Lcd_Set_Cursor 0531  
               ??i1_Lcd_Port 0070                   ??_Lcd_Init 003A                   ??_Lcd_Port 0036  
           ??i1_mostra_timer 002F                   __stringtab 065A               _Lcd_Write_Char 0725  
                    _Lcd_Cmd 0F8D    __size_ofi1_Lcd_Set_Cursor 0052         __size_ofi1_Lcd_Clear 000D  
             ??_regula_timer 00A8           __end_ofi1_Lcd_Port 07FA                      ___lwdiv 05CE  
                    ___lwmod 0762              ?_Lcd_Set_Cursor 003A                      _celsius 0052  
                    __ptext1 0583                      __ptext2 0300                      __ptext3 0029  
                    __ptext4 0762                      __ptext5 05CE                      __ptext6 0614  
                    __ptext7 0725                      __ptext8 04D9                      __ptext9 0F66  
                  _T1CONbits 0010                      _dpowers 066A            i1___lwdiv@divisor 0070  
          i1___lwdiv@counter 0077   __end_ofi1_Lcd_Write_String 0725      i1Lcd_Set_Cursor@templcd 007A  
                    _sprintf 0029       __end_of_Lcd_Write_Char 0762         end_of_initialization 0025  
              ?_mostra_timer 0070                    Lcd_Port@a 0036    __size_ofi1_Lcd_Write_Char 0037  
                  i1_Lcd_Cmd 0F73                    _PORTBbits 0006                    _PORTCbits 0007  
                  i1___lwdiv 069F                    i1___lwmod 079E              ?_Lcd_Write_Char 0070  
          Lcd_Write_String@a 003B            Lcd_Write_String@i 0040               ??_mostra_timer 00A7  
                  i1_sprintf 0168                    _Lcd_Clear 0F66                   ?i1_Lcd_Cmd 0070  
           _Lcd_Write_String 0614            i1___lwmod@divisor 0078            i1___lwmod@counter 007D  
        start_initialization 0015                   ?i1___lwdiv 0070                   ?i1___lwmod 0078  
       __end_of_regula_timer 05CE            __size_of_Lcd_Init 0063            __size_of_Lcd_Port 0020  
      Lcd_Set_Cursor@templcd 0040             i1_Lcd_Set_Cursor 0531                 i1sprintf@val 002B  
                 ?i1_sprintf 0020                   ?_Lcd_Clear 0070              Lcd_Write_Char@a 003A  
            Lcd_Write_Char@y 0039                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                     ?_Lcd_Cmd 0070                  sprintf@flag 00A1  
                sprintf@prec 00A2             ___lwdiv@dividend 0038             ??_Lcd_Set_Cursor 003B  
                   ?___lwdiv 0036                     ?___lwmod 003E             i1_Lcd_Write_Char 0FC9  
                ??i1_Lcd_Cmd 0071         __end_of_mostra_timer 0382                    __pstrings 065A  
           ___lwdiv@quotient 003C                  ??i1___lwdiv 0074                  ??i1___lwmod 007C  
                   ?_sprintf 0044            interrupt_function 0004                ??i1_Lcd_Clear 0074  
                   _PIE1bits 008C           i1_Lcd_Write_String 06E3                     Lcd_Cmd@a 0039  
                   _PIR1bits 000C                  ??i1_sprintf 0025                  ??_Lcd_Clear 003A  
        ?i1_Lcd_Write_String 0075                   _ADCON0bits 001F                  __stringbase 0669  
                 _ADCON1bits 009F        __size_of_regula_timer 004B             ??_Lcd_Write_Char 0037  
                   _Lcd_Init 0476                     _Lcd_Port 0FA9         ??i1_Lcd_Write_String 0077  
   __end_of_Lcd_Write_String 065A             __size_of_Lcd_Cmd 001C      __size_ofi1_mostra_timer 007C  
        __end_ofi1_Lcd_Clear 0F66                 _regula_timer 0583             __size_of___lwdiv 0046  
           __size_of___lwmod 003C           __end_of__stringtab 066A     __end_ofi1_Lcd_Set_Cursor 0583  
                 sprintf@val 00A3              ___lwdiv@divisor 0036            i1Lcd_Set_Cursor@a 0077  
          i1Lcd_Set_Cursor@b 0074            i1Lcd_Set_Cursor@y 0079            i1Lcd_Set_Cursor@z 0078  
            ___lwdiv@counter 003B                     __ptext10 0476                     __ptext11 0F8D  
                   __ptext20 0531                     __ptext12 0FA9                     __ptext21 0F59  
                   __ptext13 03FE                     __ptext22 0F73                     __ptext14 0382  
                   __ptext23 07D8                     __ptext15 0168                     __ptext16 079E  
                   __ptext17 069F                     __ptext18 06E3                     __ptext19 0FC9  
           __size_of_sprintf 013F                __size_of_INTR 0078           i1___lwdiv@dividend 0072  
              __size_of_main 00B0                  i1Lcd_Port@a 0070        __size_of_mostra_timer 0082  
        i1Lcd_Write_String@a 0075          i1Lcd_Write_String@i 007A           i1___lwdiv@quotient 0075  
                 _INTCONbits 000B                     intlevel1 0000                    sprintf@ap 00A0  
   __end_ofi1_Lcd_Write_Char 1000                    sprintf@sp 00A5             ___lwmod@dividend 0040  
               _mostra_timer 0300                  i1_Lcd_Clear 0F59                   i1Lcd_Cmd@a 0073  
                  stringcode 0664                     sprintf@c 00A6                     sprintf@f 0044  
            ___lwmod@divisor 003E              ___lwmod@counter 0043                   i1_Lcd_Port 07D8  
                   stringdir 0664                     stringtab 065A               i1_mostra_timer 0382  
